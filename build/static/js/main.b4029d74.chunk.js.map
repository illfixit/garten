{"version":3,"sources":["Components/MainScreenContainer/Radius.js","Components/MainScreenContainer/Timer.js","Components/MainScreenContainer/Plant.js","Components/MainScreenContainer/StartStopButton.js","Components/MainScreenContainer/SessionSettings.js","Components/MainScreenContainer/GIFSettings.js","Components/MainScreenContainer/ToggleViewButton.js","Components/MainScreenContainer/SessionPauseButton.js","Components/MainScreenContainer/MainScreen.js","App.js","index.js"],"names":["Radius","props","step","useRef","startStep","useEffect","rotateCircle","document","querySelector","current","timerActive","element","degree","transformString","concat","style","webkitTransform","MozTransform","msTransform","OTransform","transform","parentElement","background","react_default","a","createElement","es","onPan","event","target","className","rect","getBoundingClientRect","x","center","width","y","height","atan","Math","atan2","integer","floor","newStep","abs","setStartStep","Timer","_ref","setTimerActive","currentActivity","setCurrentActivity","GIFSArray","currentGIF","numberOfSessions","currentSession","setCurrentSession","autoSwitch","setAutoSwitch","_useState","useState","_useState2","Object","slicedToArray","totalSeconds","setTotalSeconds","_useState3","_useState4","intrvl","setIntrvl","formatTime","time","toString","padStart","audio","Audio","setInterval","getElementsByClassName","clearInterval","minutes","seconds","play","backgroundImage","Plant","console","log","plantContainerBoundaries","Fragment","id","MainScreenContainer_Radius","MainScreenContainer_Timer","Buttons","onClick","SessionSettings","setNumberOfSessions","GIFSettings","useGIF","e","gifId","firstChild","innerText","length","setCurrentGIF","getElementById","deleteGIF","tempArr","filter","g","idx","setGIFSArray","localStorage","setItem","JSON","stringify","map","key","slice","alt","src","placeholder","gifUrl","value","toConsumableArray","trim","ToggleViewButton","view","setView","SessionControl","classList","remove","add","MainScreen","pauseStartStep","setPauseStartStep","_useState5","_useState6","sessionStartStep","setSessionStartStep","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","getItem","undefined","_useState15","parse","_useState16","pauseGIFSArray","setPauseGIFSArray","_useState17","_useState18","sessionGIFSArray","setSessionGIFSArray","_useState19","_useState20","currentSessionGIF","setCurrentSessionGIF","_useState21","_useState22","currentPauseGIF","setCurrentPauseGIF","body","addEventListener","preventDefault","passive","SessionPauseButton","MainScreenContainer_Plant","StartStopButton","MainScreenContainer_ToggleViewButton","MainScreenContainer_SessionSettings","MainScreenContainer_GIFSettings","App","MainScreenContainer_MainScreen","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.b4029d74.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Hammer from \"rc-hammerjs\";\r\n\r\n// let lastStep = 0;\r\n\r\nconst Radius = (props) => {\r\n  const step = useRef(props.startStep);\r\n  const interval = 180 / 11.5;\r\n\r\n  useEffect(() => {\r\n    // console.log(\"toggle Timer: active: \", props.timerActive, step.current);\r\n    rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n  }, [props.timerActive]);\r\n\r\n  const rotateCircle = (element, degree) => {\r\n    let transformString = `rotate(${degree}deg) scale(1) skewX(0deg) skewY(0deg)`;\r\n\r\n    // now attach that variable to each prefixed style\r\n    element.style.webkitTransform = transformString;\r\n    element.style.MozTransform = transformString;\r\n    element.style.msTransform = transformString;\r\n    element.style.OTransform = transformString;\r\n    element.style.transform = transformString;\r\n\r\n    element.parentElement.style.background = `conic-gradient(mediumslateblue ${degree}deg, rosybrown 0deg)`;\r\n  };\r\n\r\n  const handlePan = (event) => {\r\n    if (\r\n      event.target.className === \"radius\" ||\r\n      event.target.className === \"radiusCircle\"\r\n    ) {\r\n      // console.log(\"handlePan\");\r\n\r\n      // window.scrollTo(0, 0);\r\n\r\n      let rect;\r\n      if (event.target.className === \"radius\")\r\n        rect = event.target.parentElement.getBoundingClientRect();\r\n      if (event.target.className === \"radiusCircle\")\r\n        rect = event.target.parentElement.parentElement.getBoundingClientRect();\r\n\r\n      let x = (event.center.x - rect.x) / rect.width - 0.5; //x position within the element.\r\n      let y = 0.5 - (event.center.y - rect.y) / rect.height; //y position within the element.\r\n\r\n      let atan = (Math.atan2(y, x) * 180) / 3.1415;\r\n      if (atan < -180) atan = -180;\r\n      if (atan > 180) atan = 180;\r\n\r\n      let degree = 0;\r\n\r\n      if (atan <= 90 && atan >= -180) degree = -atan + 90;\r\n      if (atan > 90 && atan <= 180) degree = -atan + 450;\r\n      if (degree > 0 && degree < 10) degree = 0;\r\n\r\n      let integer = Math.floor(degree / interval);\r\n      let decimal = degree - integer;\r\n\r\n      let newStep = decimal >= 0.5 ? integer + 1 : integer;\r\n      step.current =\r\n        Math.abs(step.current - newStep) > 3 ? step.current : newStep;\r\n\r\n      rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n\r\n      props.setStartStep(step.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Hammer onPan={handlePan}>\r\n      <div className={`radius${props.timerActive ? \" hidden\" : \"\"}`}>\r\n        <div\r\n          className={`radiusCircle${props.timerActive ? \" hidden\" : \"\"}`}\r\n        ></div>\r\n      </div>\r\n    </Hammer>\r\n  );\r\n};\r\n\r\nexport default Radius;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst minMinutes = 5;\r\n// const sec = 1;\r\nconst stepLength = 5;\r\n\r\nconst testing_value = 1;\r\n\r\nconst Timer = ({\r\n  startStep,\r\n  // timeStep,\r\n  // setTimeStep,\r\n  setStartStep,\r\n  timerActive,\r\n  setTimerActive,\r\n  currentActivity,\r\n  setCurrentActivity,\r\n  GIFSArray,\r\n  currentGIF,\r\n  numberOfSessions,\r\n  currentSession,\r\n  setCurrentSession,\r\n  autoSwitch,\r\n  setAutoSwitch,\r\n}) => {\r\n  const [totalSeconds, setTotalSeconds] = useState(\r\n    (minMinutes + startStep * stepLength) * 60\r\n  );\r\n  const [intrvl, setIntrvl] = useState(0);\r\n\r\n  const formatTime = (time) => time.toString().padStart(2, \"0\");\r\n\r\n  const audio = new Audio(\"./static/sounds/uplifting-flute.mp3\");\r\n\r\n  useEffect(() => {\r\n    setTotalSeconds((minMinutes + startStep * stepLength) * 60);\r\n  }, [startStep]);\r\n\r\n  useEffect(() => {\r\n    if (timerActive) {\r\n      setIntrvl(\r\n        setInterval(() => {\r\n          if (timerActive === true) {\r\n            setTotalSeconds((totalSeconds) => {\r\n              // console.log(totalSeconds);\r\n              document.getElementsByClassName(\r\n                \"plantContainer\"\r\n              )[0].style.background = `conic-gradient(mediumslateblue ${(totalSeconds /\r\n                ((minMinutes + startStep * stepLength) * 60)) *\r\n                360}deg, rosybrown 0deg)`;\r\n              return totalSeconds - 1;\r\n            });\r\n          }\r\n        }, 1000 * testing_value)\r\n      );\r\n    } else {\r\n      setTotalSeconds((minMinutes + startStep * stepLength) * 60);\r\n      clearInterval(intrvl);\r\n    }\r\n\r\n    return () => clearInterval(intrvl);\r\n  }, [timerActive]);\r\n\r\n  // console.log(totalSeconds);\r\n\r\n  let minutes = Math.floor(totalSeconds / 60);\r\n  let seconds = totalSeconds - Math.floor(totalSeconds / 60) * 60;\r\n\r\n  if (totalSeconds === 0 && timerActive) {\r\n    // console.log(\"timeStep\", timeStep);\r\n    // console.log(\"totalSeconds === 0\");\r\n    audio.play();\r\n    clearInterval(intrvl);\r\n    // console.log(currentActivity, \" \", currentSession, \"/\", numberOfSessions);\r\n\r\n    // console.log(autoSwitch, timerActive);\r\n\r\n    if (currentSession < numberOfSessions) {\r\n      // console.log(currentSession, \" < \", numberOfSessions);\r\n      if (currentActivity === \"pause\") {\r\n        setCurrentSession(currentSession + 1);\r\n      }\r\n\r\n      setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n      setTimerActive(autoSwitch);\r\n    }\r\n\r\n    if (currentSession === numberOfSessions) {\r\n      // console.log(currentSession, \" = \", numberOfSessions);\r\n\r\n      if (currentActivity === \"session\") {\r\n        setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n        setTimerActive(autoSwitch);\r\n      } else if (currentActivity === \"pause\") {\r\n        setAutoSwitch(false);\r\n        setTimerActive(false);\r\n      }\r\n    }\r\n\r\n    // setTotalSeconds((5 + timeStep * 5) * 60);\r\n    // setTimeStep(timeStep);\r\n  }\r\n\r\n  if (totalSeconds <= 0) {\r\n    minutes = 0;\r\n    seconds = 0;\r\n  }\r\n\r\n  // console.log(GIFSArray[currentGIF]);\r\n  // backgroundImage: GIFSArray[currentGIF]\r\n\r\n  return (\r\n    <div className=\"timerContainer\">\r\n      <div\r\n        className={`timerBackground ${\r\n          currentActivity === \"session\"\r\n            ? \"sessionBackground\"\r\n            : \"pauseBackground\"\r\n        }`}\r\n        style={{ backgroundImage: `url(${GIFSArray[currentGIF]})` }}\r\n      ></div>\r\n      <div className=\"timer\">\r\n        {formatTime(minutes)}:{formatTime(seconds)}\r\n      </div>\r\n      <div className=\"timerText\">\r\n        {currentActivity === \"session\"\r\n          ? `Session ${currentSession}/${numberOfSessions}`\r\n          : `Pause`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Radius from \"./Radius\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst Plant = (props) => {\r\n  console.log(props);\r\n\r\n  let plantContainerBoundaries = null;\r\n\r\n  useEffect(() => {\r\n    if (document.querySelector(\".plantContainer\")) {\r\n      plantContainerBoundaries = document\r\n        .querySelector(\".plantContainer\")\r\n        .getBoundingClientRect();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return console.log(\"lol\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`plantContainer ${props.timerActive ? \"\" : \"\"}`}\r\n        id={props.currentActivity}\r\n      >\r\n        <Radius\r\n          plantContainerBoundaries={plantContainerBoundaries}\r\n          timerActive={props.timerActive}\r\n          startStep={props.startStep}\r\n          setStartStep={props.setStartStep}\r\n        />\r\n\r\n        <div className=\"plant\">\r\n          <Timer\r\n            startStep={props.startStep}\r\n            setStartStep={props.setStartStep}\r\n            timerActive={props.timerActive}\r\n            setTimerActive={props.setTimerActive}\r\n            currentActivity={props.currentActivity}\r\n            setCurrentActivity={props.setCurrentActivity}\r\n            GIFSArray={props.GIFSArray}\r\n            currentGIF={props.currentGIF}\r\n            numberOfSessions={props.numberOfSessions}\r\n            currentSession={props.currentSession}\r\n            setCurrentSession={props.setCurrentSession}\r\n            autoSwitch={props.autoSwitch}\r\n            setAutoSwitch={props.setAutoSwitch}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\n\r\nconst Buttons = ({ timerActive, setTimerActive, setAutoSwitch }) => {\r\n  return timerActive ? (\r\n    <React.Fragment>\r\n      <button\r\n        className=\"mainScreenButtons\"\r\n        onClick={() => {\r\n          setTimerActive(false);\r\n          setAutoSwitch(false);\r\n        }}\r\n      >\r\n        Give Up\r\n      </button>\r\n    </React.Fragment>\r\n  ) : (\r\n    <button className=\"mainScreenButtons\" onClick={() => setTimerActive(true)}>\r\n      Start\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst SessionSettings = (props) => {\r\n  const decreaseNumberOfSessions = () => {\r\n    if (\r\n      props.numberOfSessions > 1 &&\r\n      props.numberOfSessions > props.currentSession\r\n    )\r\n      props.setNumberOfSessions(props.numberOfSessions - 1);\r\n  };\r\n\r\n  const increaseNumberOfSessions = () => {\r\n    props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    props.setAutoSwitch(true);\r\n  };\r\n\r\n  const decreaseNumberOfCurrentSession = () => {\r\n    if (props.currentSession > 1) {\r\n      props.setCurrentSession(props.currentSession - 1);\r\n      props.setAutoSwitch(true);\r\n    }\r\n  };\r\n\r\n  const increaseNumberOfCurrentSession = () => {\r\n    props.setCurrentSession(props.currentSession + 1);\r\n    if (props.currentSession > props.numberOfSessions - 1) {\r\n      props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionSettings\">\r\n      <div className=\"settings_options\">\r\n        <p>Auto start next session/pause?</p>\r\n        <div className=\"autoStartButtonsContainer\">\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"autoStartButtonsActive\" : \"\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"\" : \"autoStartButtonsActive\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"settings_options\">\r\n        <p>How many sessions today?</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"lessSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfSessions}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.numberOfSessions}</p>\r\n          <button\r\n            id=\"moreSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfSessions}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"settings_options\">\r\n        <p>Number of current session</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"minusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfCurrentSession}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.currentSession}</p>\r\n          <button\r\n            id=\"plusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfCurrentSession}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionSettings;\r\n","import React from \"react\";\r\n\r\nconst GIFSettings = (props) => {\r\n  console.log(props);\r\n\r\n  const addGIF = (e) => {\r\n    // console.log(e)\r\n\r\n    let gifUrl = document.getElementById(\"url_input\").value;\r\n    let tempArr = [...props.GIFSArray, gifUrl];\r\n    if (gifUrl.trim()) props.setGIFSArray(tempArr);\r\n    localStorage.setItem(\r\n      `${props.currentActivity}GIFSArray`,\r\n      JSON.stringify(tempArr)\r\n    );\r\n    document.getElementById(\"url_input\").value = \"\";\r\n    // console.log(props.GIFSArray);\r\n  };\r\n\r\n  const useGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    // console.log(gifId, props.GIFSArray.length);\r\n    if (gifId >= 0 && gifId <= props.GIFSArray.length) {\r\n      props.setCurrentGIF(gifId);\r\n      //   console.log(`url(${props.GIFSArray[gifId - 1]})`);\r\n      if (document.getElementById(`${props.currentActivity}Background`)) {\r\n        document.getElementById(\r\n          `${props.currentActivity}Background`\r\n        ).style.backgroundImage = `url(${props.GIFSArray[gifId]})`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    console.log(gifId, props.currentGIF);\r\n    if (\r\n      gifId >= 0 &&\r\n      gifId <= props.GIFSArray.length &&\r\n      gifId !== props.currentGIF\r\n    ) {\r\n      let tempArr = props.GIFSArray.filter((g, idx) => idx !== gifId);\r\n      props.setGIFSArray(tempArr);\r\n      localStorage.setItem(\r\n        `${props.currentActivity}GIFSArray`,\r\n        JSON.stringify(tempArr)\r\n      );\r\n      if (gifId < props.currentGIF) props.setCurrentGIF(props.currentGIF - 1);\r\n    }\r\n  };\r\n\r\n  return props.currentActivity ? (\r\n    <div className=\"settingsContainer\">\r\n      {props.GIFSArray.map((g, idx) => (\r\n        <div\r\n          className=\"settings_options\"\r\n          key={`${g.slice(0, 5) + g.slice(-5)}`}\r\n        >\r\n          <p>{idx + 1}</p>\r\n          <img className=\"gif_preview\" alt=\"gif_preview\" src={g} />\r\n          <div className=\"settings_button_container\">\r\n            <button className=\"settings_button\" onClick={useGIF}>\r\n              Use\r\n            </button>\r\n            <button\r\n              className=\"settings_button delete_button\"\r\n              onClick={deleteGIF}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"input_container settings_options\">\r\n        <input\r\n          id=\"url_input\"\r\n          className=\"background_input\"\r\n          placeholder=\"Paste GIF's URL here\"\r\n        ></input>\r\n        <button className=\"settings_button\" onClick={addGIF}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default GIFSettings;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ToggleViewButton = (props) => {\r\n  const [view, setView] = useState(\"compact\");\r\n\r\n  const toggleView = () => {\r\n    if (view === \"compact\") {\r\n      document.getElementsByClassName(\"toggleViewButton\")[0].style.transform =\r\n        \"rotate(90deg) translateY(-0.6rem)\";\r\n      document.getElementsByClassName(\"mainComponents\")[0].style.height =\r\n        \"100vh\";\r\n      setView(\"full\");\r\n    } else {\r\n      document.getElementsByClassName(\"toggleViewButton\")[0].style.transform =\r\n        \"rotate(270deg) translateY(0rem)\";\r\n      document.getElementsByClassName(\"mainComponents\")[0].style.height =\r\n        \"auto\";\r\n      setView(\"compact\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className=\"toggleViewButton\" onClick={toggleView}>\r\n      <p>&#8249;</p>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ToggleViewButton;\r\n","import React from \"react\";\r\n\r\nconst SessionControl = ({ currentActivity, setCurrentActivity }) => {\r\n  const changeActivity = (e) => {\r\n    // console.log(e.target.id);\r\n    if (e.target.id === \"pause\") {\r\n      document\r\n        .getElementById(\"session\")\r\n        .classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"pause\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"pause\");\r\n    } else if (e.target.id === \"session\") {\r\n      document.getElementById(\"pause\").classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"session\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"session\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionControlContainer\" onClick={changeActivity}>\r\n      <p\r\n        id=\"session\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"session\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        Session\r\n      </p>\r\n      <p\r\n        id=\"pause\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"pause\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        &nbsp;Pause&nbsp;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionControl;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Plant from \"./Plant\";\r\n\r\nimport StartStopButton from \"./StartStopButton\";\r\nimport SessionSettings from \"./SessionSettings\";\r\nimport GIFSettings from \"./GIFSettings\";\r\n\r\nimport ToggleViewButton from \"./ToggleViewButton\";\r\n\r\nimport SessionPauseButton from \"./SessionPauseButton\";\r\n\r\nconst MainScreen = (props) => {\r\n  const [currentActivity, setCurrentActivity] = useState(\"session\");\r\n\r\n  const [pauseStartStep, setPauseStartStep] = useState(1);\r\n  const [sessionStartStep, setSessionStartStep] = useState(9);\r\n\r\n  const [numberOfSessions, setNumberOfSessions] = useState(2);\r\n  const [currentSession, setCurrentSession] = useState(1);\r\n  const [autoSwitch, setAutoSwitch] = useState(true);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"pauseGIFSArray\") === null ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === [] ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"pauseGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (\r\n      localStorage.getItem(\"sessionGIFSArray\") === null ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === [] ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"sessionGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n        ])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const [pauseGIFSArray, setPauseGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"pauseGIFSArray\")) || [\r\n      \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n    ]\r\n  );\r\n  const [sessionGIFSArray, setSessionGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"sessionGIFSArray\")) || [\r\n      \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n    ]\r\n  );\r\n\r\n  const [currentSessionGIF, setCurrentSessionGIF] = useState(0);\r\n  const [currentPauseGIF, setCurrentPauseGIF] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function preventDefault(e) {\r\n      if (\r\n        e.target.className === \"radius\" ||\r\n        e.target.className === \"radiusCircle\"\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    document.body.addEventListener(\"touchmove\", preventDefault, {\r\n      passive: false,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainScreenContainer\">\r\n      <div className=\"mainComponents\">\r\n        <SessionPauseButton\r\n          currentActivity={currentActivity}\r\n          setCurrentActivity={setCurrentActivity}\r\n        />\r\n\r\n        {currentActivity === \"session\" ? (\r\n          <Plant\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            setCurrentActivity={setCurrentActivity}\r\n            startStep={sessionStartStep}\r\n            setStartStep={setSessionStartStep}\r\n            currentSession={currentSession}\r\n            setCurrentSession={setCurrentSession}\r\n            numberOfSessions={numberOfSessions}\r\n            GIFSArray={sessionGIFSArray}\r\n            currentGIF={currentSessionGIF}\r\n            autoSwitch={autoSwitch}\r\n            setAutoSwitch={setAutoSwitch}\r\n            timerActive={timerActive}\r\n            setTimerActive={setTimerActive}\r\n          />\r\n        ) : (\r\n          <Plant\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            setCurrentActivity={setCurrentActivity}\r\n            startStep={pauseStartStep}\r\n            setStartStep={setPauseStartStep}\r\n            currentSession={currentSession}\r\n            setCurrentSession={setCurrentSession}\r\n            numberOfSessions={numberOfSessions}\r\n            GIFSArray={pauseGIFSArray}\r\n            currentGIF={currentPauseGIF}\r\n            autoSwitch={autoSwitch}\r\n            setAutoSwitch={setAutoSwitch}\r\n            timerActive={timerActive}\r\n            setTimerActive={setTimerActive}\r\n          />\r\n        )}\r\n\r\n        <StartStopButton\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n          setAutoSwitch={setAutoSwitch}\r\n        />\r\n\r\n        <ToggleViewButton />\r\n      </div>\r\n      <div className=\"secondaryComponents\">\r\n        <SessionSettings\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          numberOfSessions={numberOfSessions}\r\n          setNumberOfSessions={setNumberOfSessions}\r\n          autoSwitch={autoSwitch}\r\n          setAutoSwitch={setAutoSwitch}\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n        />\r\n        {currentActivity === \"session\" ? (\r\n          <GIFSettings\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            GIFSArray={sessionGIFSArray}\r\n            setGIFSArray={setSessionGIFSArray}\r\n            currentGIF={currentSessionGIF}\r\n            setCurrentGIF={setCurrentSessionGIF}\r\n          />\r\n        ) : (\r\n          <GIFSettings\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            GIFSArray={pauseGIFSArray}\r\n            setGIFSArray={setPauseGIFSArray}\r\n            currentGIF={currentPauseGIF}\r\n            setCurrentGIF={setCurrentPauseGIF}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\n\r\n// import Header from \"./Components/HeaderContainer/Header\";\r\nimport MainScreen from \"./Components/MainScreenContainer/MainScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Header /> */}\r\n      <MainScreen />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n"],"sourceRoot":""}