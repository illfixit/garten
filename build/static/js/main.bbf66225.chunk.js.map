{"version":3,"sources":["Components/MainScreenContainer/Radius.js","Components/MainScreenContainer/Timer.js","Components/MainScreenContainer/PlantSettings.js","Components/MainScreenContainer/SessionSettings.js","Components/MainScreenContainer/Buttons.js","Components/MainScreenContainer/Plant.js","Components/MainScreenContainer/SessionPlant.js","Components/MainScreenContainer/PausePlant.js","Components/MainScreenContainer/SessionControl.js","Components/MainScreenContainer/MainScreen.js","App.js","index.js"],"names":["Radius","props","step","useRef","startStep","useEffect","rotateCircle","document","querySelector","current","timerActive","element","degree","transformString","concat","style","webkitTransform","MozTransform","msTransform","OTransform","transform","parentElement","background","react_default","a","createElement","es","onPan","event","target","className","rect","window","scrollTo","getBoundingClientRect","x","center","width","y","height","atan","Math","atan2","integer","floor","newStep","abs","setTimeStep","setStartStep","Timer","_ref","timeStep","setTimerActive","currentActivity","setCurrentActivity","GIFSArray","currentGIF","numberOfSessions","currentSession","setCurrentSession","autoSwitch","setAutoSwitch","_useState","useState","_useState2","Object","slicedToArray","totalSeconds","setTotalSeconds","_useState3","_useState4","intrvl","setIntrvl","formatTime","time","toString","padStart","audio","Audio","setInterval","getElementsByClassName","clearInterval","minutes","seconds","play","backgroundImage","PlantSettings","useGIF","e","gifId","firstChild","innerText","length","setCurrentGIF","getElementById","deleteGIF","console","log","tempArr","filter","g","idx","setGIFSArray","localStorage","setItem","JSON","stringify","map","key","slice","alt","src","onClick","id","placeholder","gifUrl","value","toConsumableArray","trim","SessionSettings","setNumberOfSessions","Buttons","Fragment","Plant","plantContainerBoundaries","MainScreenContainer_Radius","MainScreenContainer_Timer","MainScreenContainer_Buttons","MainScreenContainer_SessionSettings","MainScreenContainer_PlantSettings","SessionPlant","MainScreenContainer_Plant","sessionStartStep","setSessionStartStep","PausePlant","pauseStartStep","setPauseStartStep","SessionControl","classList","remove","add","MainScreen","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","getItem","undefined","_useState15","parse","_useState16","pauseGIFSArray","setPauseGIFSArray","_useState17","_useState18","sessionGIFSArray","setSessionGIFSArray","_useState19","_useState20","currentSessionGIF","setCurrentSessionGIF","_useState21","_useState22","currentPauseGIF","setCurrentPauseGIF","body","addEventListener","preventDefault","passive","MainScreenContainer_SessionControl","MainScreenContainer_SessionPlant","MainScreenContainer_PausePlant","App","MainScreenContainer_MainScreen","ReactDOM","createRoot","render","src_App"],"mappings":"6JAkHeA,EA7GA,SAACC,GAad,IAAMC,EAAOC,iBAAOF,EAAMG,WAG1BC,oBAAU,WAERC,EAAaC,SAASC,cAAc,WAAYN,EAAKO,SAJtC,IAAM,QAKpB,CAACR,EAAMS,cAEV,IAAMJ,EAAe,SAACK,EAASC,GAC7B,IAAIC,EAAe,UAAAC,OAAaF,EAAM,yCAGtCD,EAAQI,MAAMC,gBAAkBH,EAChCF,EAAQI,MAAME,aAAeJ,EAC7BF,EAAQI,MAAMG,YAAcL,EAC5BF,EAAQI,MAAMI,WAAaN,EAC3BF,EAAQI,MAAMK,UAAYP,EAE1BF,EAAQU,cAAcN,MAAMO,WAAU,kCAAAR,OAAqCF,EAAM,yBA+DnF,OACEW,EAAAC,EAAAC,cAACC,EAAA,EAAM,CACLC,MA9Dc,SAACC,GACjB,GAC6B,WAA3BA,EAAMC,OAAOC,WACc,iBAA3BF,EAAMC,OAAOC,UACb,CAKA,IAAIC,EAFJC,OAAOC,SAAS,EAAG,GAGY,WAA3BL,EAAMC,OAAOC,YACfC,EAAOH,EAAMC,OAAOR,cAAca,yBACL,iBAA3BN,EAAMC,OAAOC,YACfC,EAAOH,EAAMC,OAAOR,cAAcA,cAAca,yBAElD,IAAIC,GAAKP,EAAMQ,OAAOD,EAAIJ,EAAKI,GAAKJ,EAAKM,MAAQ,GAC7CC,EAAI,IAAOV,EAAMQ,OAAOE,EAAIP,EAAKO,GAAKP,EAAKQ,OAE3CC,EAA2B,IAAnBC,KAAKC,MAAMJ,EAAGH,GAAY,OAClCK,GAAQ,MAAKA,GAAQ,KACrBA,EAAO,MAAKA,EAAO,KAEvB,IAAI5B,EAAS,EAET4B,GAAQ,IAAMA,IAAS,MAAK5B,EAAiB,GAAP4B,GACtCA,EAAO,IAAMA,GAAQ,MAAK5B,EAAiB,IAAP4B,GACpC5B,EAAS,GAAKA,EAAS,KAAIA,EAAS,GAExC,IAAI+B,EAAUF,KAAKG,MAAMhC,GAhDZ,IAAM,OAmDfiC,EAFUjC,EAAS+B,GAEE,GAAMA,EAAU,EAAIA,EAC7CzC,EAAKO,QACHgC,KAAKK,IAAI5C,EAAKO,QAAUoC,GAAW,EAAI3C,EAAKO,QAAUoC,EAExDvC,EAAaC,SAASC,cAAc,WAAYN,EAAKO,SAvDxC,IAAM,OAyDnBR,EAAM8C,YAAY7C,EAAKO,SACvBR,EAAM+C,aAAa9C,EAAKO,YA4BxBc,EAAAC,EAAAC,cAAA,OAAKK,UAAS,SAAAhB,OAAWb,EAAMS,YAAc,UAAY,KACvDa,EAAAC,EAAAC,cAAA,OACEK,UAAS,eAAAhB,OAAiBb,EAAMS,YAAc,UAAY,SCyCrDuC,EA9ID,SAAHC,GAeL,IAdJ9C,EAAS8C,EAAT9C,UACA+C,EAAQD,EAARC,SACAJ,EAAWG,EAAXH,YACArC,EAAWwC,EAAXxC,YACA0C,EAAcF,EAAdE,eACAC,EAAeH,EAAfG,gBACAC,EAAkBJ,EAAlBI,mBACAC,EAASL,EAATK,UACAC,EAAUN,EAAVM,WACAC,EAAgBP,EAAhBO,iBACAC,EAAcR,EAAdQ,eACAC,EAAiBT,EAAjBS,kBACAC,EAAUV,EAAVU,WACAC,EAAaX,EAAbW,cAAaC,EAE2BC,mBACE,IArBzB,EAEA,EAmBD3D,IACf4D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAFMK,EAAYH,EAAA,GAAEI,EAAeJ,EAAA,GAAAK,EAGRN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAExBvB,EAAY3C,GAEZ,IAAMqE,EAAa,SAACC,GAAI,OAAKA,EAAKC,WAAWC,SAAS,EAAG,MAEnDC,EAAQ,IAAIC,MAAM,uCAExBzE,oBAAU,WACR+D,EAAuD,IAhCxC,EAEA,EA8BejB,KAC7B,CAACA,EAAU/C,IAEdC,oBAAU,WAsCR,OAtBIK,EACF8D,EACEO,YAAY,YACU,IAAhBrE,GACF0D,EAAgB,SAACD,GAOf,OALA5D,SAASyE,uBACP,kBACA,GAAGjE,MAAMO,WAAU,kCAAAR,OAAsCqD,GAChB,IA5DtC,EAEA,EA0DY/D,IACf,IAAG,wBACE+D,EAAe,KAGzB,OAGLpB,EAAYI,GACZiB,EAAuD,IArE1C,EAEA,EAmEiBjB,IAC9B8B,cAAcV,IAGT,kBAAMU,cAAcV,KAC1B,CAAC7D,IAIJ,IAAIwE,EAAUzC,KAAKG,MAAMuB,EAAe,IACpCgB,EAAUhB,EAA+C,GAAhC1B,KAAKG,MAAMuB,EAAe,IA6CvD,OA3CqB,IAAjBA,GAAsBzD,IAGxBmE,EAAMO,OACNH,cAAcV,GAKVb,EAAiBD,IAEK,UAApBJ,GACFM,EAAkBD,EAAiB,GAGrCJ,EAAuC,UAApBD,EAA8B,UAAY,SAC7DD,EAAeQ,IAGbF,IAAmBD,IAGG,YAApBJ,GACFC,EAAuC,UAApBD,EAA8B,UAAY,SAC7DD,EAAeQ,IACc,UAApBP,IACTQ,GAAc,GACdT,GAAe,MAQjBe,GAAgB,IAClBe,EAAU,EACVC,EAAU,GAOV5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OACEK,UAAS,mBAAAhB,OACa,YAApBuC,EACI,oBACA,mBAENtC,MAAO,CAAEsE,gBAAe,OAAAvE,OAASyC,EAAUC,GAAW,QAExDjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACZ2C,EAAWS,GAAQ,IAAGT,EAAWU,IAEpC5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACQ,YAApBuB,EAA6B,WAAAvC,OACf4C,EAAc,KAAA5C,OAAI2C,GAAgB,mBCvD1C6B,EApFO,SAACrF,GACrB,IAcMsF,EAAS,SAACC,GACd,IAAIC,EAAQD,EAAE3D,OAAOR,cAAcA,cAAcqE,WAAWC,UAAY,EAEpEF,GAAS,GAAKA,GAASxF,EAAMsD,UAAUqC,SACzC3F,EAAM4F,cAAcJ,GAEhBlF,SAASuF,eAAc,GAAAhF,OAAIb,EAAMoD,gBAAe,iBAClD9C,SAASuF,eAAc,GAAAhF,OAClBb,EAAMoD,gBAAe,eACxBtC,MAAMsE,gBAAe,OAAAvE,OAAUb,EAAMsD,UAAUkC,GAAM,QAKvDM,EAAY,SAACP,GACjB,IAAIC,EAAQD,EAAE3D,OAAOR,cAAcA,cAAcqE,WAAWC,UAAY,EAExE,GADAK,QAAQC,IAAIR,EAAOxF,EAAMuD,YAEvBiC,GAAS,GACTA,GAASxF,EAAMsD,UAAUqC,QACzBH,IAAUxF,EAAMuD,WAChB,CACA,IAAI0C,EAAUjG,EAAMsD,UAAU4C,OAAO,SAACC,EAAGC,GAAG,OAAKA,IAAQZ,IACzDxF,EAAMqG,aAAaJ,GACnBK,aAAaC,QAAO,GAAA1F,OACfb,EAAMoD,gBAAe,aACxBoD,KAAKC,UAAUR,IAEbT,EAAQxF,EAAMuD,YAAYvD,EAAM4F,cAAc5F,EAAMuD,WAAa,KAIzE,OACEjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACZ7B,EAAMsD,UAAUoD,IAAI,SAACP,EAAGC,GAAG,OAC1B9E,EAAAC,EAAAC,cAAA,OACEK,UAAU,mBACV8E,IAAG,GAAA9F,OAAKsF,EAAES,MAAM,EAAG,GAAKT,EAAES,OAAO,KAEjCtF,EAAAC,EAAAC,cAAA,SAAI4E,EAAM,GACV9E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAAcgF,IAAI,cAAcC,IAAKX,IACpD7E,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BACbP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAkBkF,QAASzB,GAAO,OAGpDhE,EAAAC,EAAAC,cAAA,UACEK,UAAU,gCACVkF,QAASjB,GAAU,cAQ3BxE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oCACbP,EAAAC,EAAAC,cAAA,SACEwF,GAAG,YACHnF,UAAU,mBACVoF,YAAY,yBAEd3F,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAkBkF,QA3E3B,SAACxB,GAGd,IAAI2B,EAAS5G,SAASuF,eAAe,aAAasB,MAC9ClB,EAAO,GAAApF,OAAAmD,OAAAoD,EAAA,EAAApD,CAAOhE,EAAMsD,WAAS,CAAE4D,IAC/BA,EAAOG,QAAQrH,EAAMqG,aAAaJ,GACtCK,aAAaC,QAAO,GAAA1F,OACfb,EAAMoD,gBAAe,aACxBoD,KAAKC,UAAUR,IAEjB3F,SAASuF,eAAe,aAAasB,MAAQ,KAiEW,UCoB7CG,EAhGS,SAACtH,GA4BvB,OACEsB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,6BACbP,EAAAC,EAAAC,cAAA,UACEK,UAAS,oBAAAhB,OACPb,EAAM2D,WAAa,yBAA2B,IAEhDoD,QAAS,kBAAM/G,EAAM4D,eAAc,KAAM,OAI3CtC,EAAAC,EAAAC,cAAA,UACEK,UAAS,oBAAAhB,OACPb,EAAM2D,WAAa,GAAK,0BAE1BoD,QAAS,kBAAM/G,EAAM4D,eAAc,KAAO,QAMhDtC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,mCACdP,EAAAC,EAAAC,cAAA,UACEwF,GAAG,eACHnF,UAAU,wBACVkF,QAxDuB,WAE7B/G,EAAMwD,iBAAmB,GACzBxD,EAAMwD,iBAAmBxD,EAAMyD,gBAE/BzD,EAAMuH,oBAAoBvH,EAAMwD,iBAAmB,KAmDX,KAIpClC,EAAAC,EAAAC,cAAA,KAAGwF,GAAG,oBAAoBhH,EAAMwD,kBAChClC,EAAAC,EAAAC,cAAA,UACEwF,GAAG,eACHnF,UAAU,wBACVkF,QAxDuB,WAC/B/G,EAAMuH,oBAAoBvH,EAAMwD,iBAAmB,GACnDxD,EAAM4D,eAAc,KAsDsB,OAOxCtC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,mCACdP,EAAAC,EAAAC,cAAA,UACEwF,GAAG,sBACHnF,UAAU,wBACVkF,QAhE6B,WACjC/G,EAAMyD,eAAiB,IACzBzD,EAAM0D,kBAAkB1D,EAAMyD,eAAiB,GAC/CzD,EAAM4D,eAAc,MA6D0B,KAI1CtC,EAAAC,EAAAC,cAAA,KAAGwF,GAAG,oBAAoBhH,EAAMyD,gBAChCnC,EAAAC,EAAAC,cAAA,UACEwF,GAAG,qBACHnF,UAAU,wBACVkF,QAjE6B,WACrC/G,EAAM0D,kBAAkB1D,EAAMyD,eAAiB,GAC3CzD,EAAMyD,eAAiBzD,EAAMwD,iBAAmB,GAClDxD,EAAMuH,oBAAoBvH,EAAMwD,iBAAmB,KA8DL,SClErCgE,EApBC,SAAHvE,GAAuD,IAAjDxC,EAAWwC,EAAXxC,YAAa0C,EAAcF,EAAdE,eAAgBS,EAAaX,EAAbW,cAC9C,OAAOnD,EACLa,EAAAC,EAAAC,cAACF,EAAAC,EAAMkG,SAAQ,KACbnG,EAAAC,EAAAC,cAAA,UACEK,UAAU,oBACVkF,QAAS,WACP5D,GAAe,GACfS,GAAc,KACd,YAMNtC,EAAAC,EAAAC,cAAA,UAAQK,UAAU,oBAAoBkF,QAAS,kBAAM5D,GAAe,KAAM,UCsE/DuE,EA9ED,SAAC1H,GACb,IAAA6D,EACgCC,mBAAS9D,EAAMG,WAAU4D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlDX,EAAQa,EAAA,GAAEjB,EAAWiB,EAAA,GASxB4D,EAA2B,KAW/B,OATAvH,oBAAU,WACJE,SAASC,cAAc,qBACzBoH,EAA2BrH,SACxBC,cAAc,mBACd0B,0BAGJ,IAGDX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkG,SAAA,KACEnG,EAAAC,EAAAC,cAAA,OAAKK,UAAS,kBAAAhB,QAAoBb,EAAMS,YAAc,MACpDa,EAAAC,EAAAC,cAACoG,EAAM,CACLD,yBAA0BA,EAC1B7E,YAAaA,EACbrC,YAAaT,EAAMS,YACnBN,UAAWH,EAAMG,UACjB4C,aAAc/C,EAAM+C,eAGtBzB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SACbP,EAAAC,EAAAC,cAACqG,EAAK,CACJ1H,UAAWH,EAAMG,UACjB+C,SAAUA,EACVJ,YAAaA,EACbrC,YAAaT,EAAMS,YACnB0C,eAAgBnD,EAAMmD,eACtBC,gBAAiBpD,EAAMoD,gBACvBC,mBAAoBrD,EAAMqD,mBAC1BC,UAAWtD,EAAMsD,UACjBC,WAAYvD,EAAMuD,WAClBC,iBAAkBxD,EAAMwD,iBACxBC,eAAgBzD,EAAMyD,eACtBC,kBAAmB1D,EAAM0D,kBACzBC,WAAY3D,EAAM2D,WAClBC,cAAe5D,EAAM4D,kBAI3BtC,EAAAC,EAAAC,cAACsG,EAAO,CACNrH,YAAaT,EAAMS,YACnB0C,eAAgBnD,EAAMmD,eACtBS,cAAe5D,EAAM4D,gBAEvBtC,EAAAC,EAAAC,cAACuG,EAAe,CACdtE,eAAgBzD,EAAMyD,eACtBC,kBAAmB1D,EAAM0D,kBACzBF,iBAAkBxD,EAAMwD,iBACxB+D,oBAAqBvH,EAAMuH,oBAC3B5D,WAAY3D,EAAM2D,WAClBC,cAAe5D,EAAM4D,cACrBnD,YAAaT,EAAMS,YACnB0C,eAAgBnD,EAAMmD,iBAExB7B,EAAAC,EAAAC,cAACwG,EAAa,CACZ5E,gBAAiBpD,EAAMoD,gBACvBE,UAAWtD,EAAMsD,UACjB+C,aAAcrG,EAAMqG,aACpB9C,WAAYvD,EAAMuD,WAClBqC,cAAe5F,EAAM4F,kBCtDdqC,EAvBM,SAACjI,GACpB,OACEsB,EAAAC,EAAAC,cAAC0G,EAAK,CACJ9E,gBAAiBpD,EAAMoD,gBACvBC,mBAAoBrD,EAAMqD,mBAC1BlD,UAAWH,EAAMmI,iBACjBpF,aAAc/C,EAAMoI,oBACpB9E,UAAWtD,EAAMsD,UACjB+C,aAAcrG,EAAMqG,aACpB9C,WAAYvD,EAAMuD,WAClBqC,cAAe5F,EAAM4F,cACrBpC,iBAAkBxD,EAAMwD,iBACxB+D,oBAAqBvH,EAAMuH,oBAC3B9D,eAAgBzD,EAAMyD,eACtBC,kBAAmB1D,EAAM0D,kBACzBC,WAAY3D,EAAM2D,WAClBC,cAAe5D,EAAM4D,cACrBnD,YAAaT,EAAMS,YACnB0C,eAAgBnD,EAAMmD,kBCMbkF,EAxBI,SAACrI,GAElB,OACEsB,EAAAC,EAAAC,cAAC0G,EAAK,CACJ9E,gBAAiBpD,EAAMoD,gBACvBC,mBAAoBrD,EAAMqD,mBAC1BlD,UAAWH,EAAMsI,eACjBvF,aAAc/C,EAAMuI,kBACpBjF,UAAWtD,EAAMsD,UACjB+C,aAAcrG,EAAMqG,aACpB9C,WAAYvD,EAAMuD,WAClBqC,cAAe5F,EAAM4F,cACrBpC,iBAAkBxD,EAAMwD,iBACxB+D,oBAAqBvH,EAAMuH,oBAC3B9D,eAAgBzD,EAAMyD,eACtBC,kBAAmB1D,EAAM0D,kBACzBC,WAAY3D,EAAM2D,WAClBC,cAAe5D,EAAM4D,cACrBnD,YAAaT,EAAMS,YACnB0C,eAAgBnD,EAAMmD,kBCoBbqF,EAxCQ,SAAHvF,GAAgD,IAA1CG,EAAeH,EAAfG,gBAAiBC,EAAkBJ,EAAlBI,mBAkBzC,OACE/B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0BAA0BkF,QAlBpB,SAACxB,GAEF,UAAhBA,EAAE3D,OAAOoF,IACX1G,SACGuF,eAAe,WACf4C,UAAUC,OAAO,wBACpBpI,SAASuF,eAAe,SAAS4C,UAAUE,IAAI,wBAE/CtF,EAAmB,UACM,YAAhBkC,EAAE3D,OAAOoF,KAClB1G,SAASuF,eAAe,SAAS4C,UAAUC,OAAO,wBAClDpI,SAASuF,eAAe,WAAW4C,UAAUE,IAAI,wBAEjDtF,EAAmB,cAMnB/B,EAAAC,EAAAC,cAAA,KACEwF,GAAG,UACHnF,UAAS,yBAAAhB,OACa,YAApBuC,EAAgC,uBAAyB,KACxD,WAIL9B,EAAAC,EAAAC,cAAA,KACEwF,GAAG,QACHnF,UAAS,yBAAAhB,OACa,UAApBuC,EAA8B,uBAAyB,KACtD,mBCuHIwF,EAlJI,SAAC5I,GAAU,IAAA6D,EACkBC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxDT,EAAeW,EAAA,GAAEV,EAAkBU,EAAA,GAAAK,EACEN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAhDkE,EAAcjE,EAAA,GAAEkE,EAAiBlE,EAAA,GAAAwE,EACQ/E,mBAAS,GAAEgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAApDV,EAAgBW,EAAA,GAAEV,EAAmBU,EAAA,GAAAC,EACIjF,mBAAS,GAAEkF,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAApDvF,EAAgBwF,EAAA,GAAEzB,EAAmByB,EAAA,GAAAC,EACAnF,mBAAS,GAAEoF,EAAAlF,OAAAC,EAAA,EAAAD,CAAAiF,EAAA,GAAhDxF,EAAcyF,EAAA,GAAExF,EAAiBwF,EAAA,GAAAC,EACJrF,oBAAS,GAAKsF,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GAA3CxF,EAAUyF,EAAA,GAAExF,EAAawF,EAAA,GAAAC,EACMvF,oBAAS,GAAMwF,EAAAtF,OAAAC,EAAA,EAAAD,CAAAqF,EAAA,GAA9C5I,EAAW6I,EAAA,GAAEnG,EAAcmG,EAAA,GAElClJ,oBAAU,WAEqC,OAA3CkG,aAAaiD,QAAQ,mBACrBjD,aAAaiD,QAAQ,oBAAsB,SACAC,IAA3ClD,aAAaiD,QAAQ,mBAErBjD,aAAaC,QACX,iBACAC,KAAKC,UAAU,CACb,oIAMyC,OAA7CH,aAAaiD,QAAQ,qBACrBjD,aAAaiD,QAAQ,sBAAwB,SACAC,IAA7ClD,aAAaiD,QAAQ,qBAErBjD,aAAaC,QACX,mBACAC,KAAKC,UAAU,CACb,mFAIL,IAAI,IAAAgD,EAEqC3F,mBAC1C0C,KAAKkD,MAAMpD,aAAaiD,QAAQ,oBAAsB,CACpD,mIAEHI,EAAA3F,OAAAC,EAAA,EAAAD,CAAAyF,EAAA,GAJMG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EAKQhG,mBAC9C0C,KAAKkD,MAAMpD,aAAaiD,QAAQ,sBAAwB,CACtD,iFAEHQ,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAJME,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAAAG,EAMMpG,mBAAS,GAAEqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAAtDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAAAG,EACAxG,mBAAS,GAAEyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAAlDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAoC1C,OAfAnK,oBAAU,WAURE,SAASoK,KAAKC,iBAAiB,YAT/B,SAAwBpF,GAEG,WAAvBA,EAAE3D,OAAOC,WACc,iBAAvB0D,EAAE3D,OAAOC,WAET0D,EAAEqF,kBAIsD,CAC1DC,SAAS,KAEV,IAGDvJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACbP,EAAAC,EAAAC,cAACsJ,EAAc,CACb1H,gBAAiBA,EACjBC,mBAAoBA,IAGD,YAApBD,EACC9B,EAAAC,EAAAC,cAACuJ,EAAY,CACX3H,gBAAiBA,EACjBC,mBAAoBA,EACpB8E,iBAAkBA,EAClBC,oBAAqBA,EACrB9E,UAAW0G,EACX3D,aAAc4D,EACd1G,WAAY6G,EACZxE,cAAeyE,EACf7G,iBAAkBA,EAClB+D,oBAAqBA,EACrB9D,eAAgBA,EAChBC,kBAAmBA,EACnBC,WAAYA,EACZC,cAAeA,EACfnD,YAAaA,EACb0C,eAAgBA,IAGlB7B,EAAAC,EAAAC,cAACwJ,EAAU,CACT5H,gBAAiBA,EACjBC,mBAAoBA,EACpBiF,eAAgBA,EAChBC,kBAAmBA,EACnBjF,UAAWsG,EACXvD,aAAcwD,EACdtG,WAAYiH,EACZ5E,cAAe6E,EACfjH,iBAAkBA,EAClB+D,oBAAqBA,EACrB9D,eAAgBA,EAChBC,kBAAmBA,EACnBC,WAAYA,EACZC,cAAeA,EACfnD,YAAaA,EACb0C,eAAgBA,MCxHX8H,MATf,WACE,OACE3J,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OAEbP,EAAAC,EAAAC,cAAC0J,EAAU,QCLJC,IAASC,WAAW9K,SAASuF,eAAe,SACpDwF,OAEH/J,EAAAC,EAAAC,cAAC8J,EAAG","file":"static/js/main.bbf66225.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Hammer from \"rc-hammerjs\";\r\n\r\n// let lastStep = 0;\r\n\r\nconst Radius = (props) => {\r\n  // useEffect(() => {\r\n  //   return document.querySelector(\".plantContainer\").addEventListener(\r\n  //     \"touchmove\",\r\n  //     (e) => {\r\n  //       e.preventDefault();\r\n  //     },\r\n  //     { passive: false }\r\n  //   );\r\n  // });\r\n\r\n  // console.log(props.startStep);\r\n\r\n  const step = useRef(props.startStep);\r\n  const interval = 180 / 11.5;\r\n\r\n  useEffect(() => {\r\n    // console.log(\"toggle Timer: active: \", props.timerActive, step.current);\r\n    rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n  }, [props.timerActive]);\r\n\r\n  const rotateCircle = (element, degree) => {\r\n    let transformString = `rotate(${degree}deg) scale(1) skewX(0deg) skewY(0deg)`;\r\n\r\n    // now attach that variable to each prefixed style\r\n    element.style.webkitTransform = transformString;\r\n    element.style.MozTransform = transformString;\r\n    element.style.msTransform = transformString;\r\n    element.style.OTransform = transformString;\r\n    element.style.transform = transformString;\r\n\r\n    element.parentElement.style.background = `conic-gradient(mediumslateblue ${degree}deg, rosybrown 0deg)`;\r\n  };\r\n\r\n  const handlePan = (event) => {\r\n    if (\r\n      event.target.className === \"radius\" ||\r\n      event.target.className === \"radiusCircle\"\r\n    ) {\r\n      // console.log(\"handlePan\");\r\n\r\n      window.scrollTo(0, 0);\r\n\r\n      let rect;\r\n      if (event.target.className === \"radius\")\r\n        rect = event.target.parentElement.getBoundingClientRect();\r\n      if (event.target.className === \"radiusCircle\")\r\n        rect = event.target.parentElement.parentElement.getBoundingClientRect();\r\n\r\n      let x = (event.center.x - rect.x) / rect.width - 0.5; //x position within the element.\r\n      let y = 0.5 - (event.center.y - rect.y) / rect.height; //y position within the element.\r\n\r\n      let atan = (Math.atan2(y, x) * 180) / 3.1415;\r\n      if (atan < -180) atan = -180;\r\n      if (atan > 180) atan = 180;\r\n\r\n      let degree = 0;\r\n\r\n      if (atan <= 90 && atan >= -180) degree = -atan + 90;\r\n      if (atan > 90 && atan <= 180) degree = -atan + 450;\r\n      if (degree > 0 && degree < 10) degree = 0;\r\n\r\n      let integer = Math.floor(degree / interval);\r\n      let decimal = degree - integer;\r\n\r\n      let newStep = decimal >= 0.5 ? integer + 1 : integer;\r\n      step.current =\r\n        Math.abs(step.current - newStep) > 3 ? step.current : newStep;\r\n\r\n      rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n\r\n      props.setTimeStep(step.current);\r\n      props.setStartStep(step.current);\r\n    }\r\n  };\r\n\r\n  // const hammerOptions = {\r\n  //   touchAction: \"compute\",\r\n  //   recognizers: {\r\n  //     tap: {\r\n  //       time: 1,\r\n  //       threshold: 1,\r\n  //     },\r\n  //     press: {\r\n  //       //   // time: 3000\r\n  //       threshold: 1,\r\n  //     },\r\n  //     pan: {\r\n  //       threshold: 100,\r\n  //       // direction: \"DIRECTION_ALL\",\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n  return (\r\n    <Hammer\r\n      onPan={handlePan}\r\n      // options={hammerOptions}\r\n      // direction=\"DIRECTION_ALL\"\r\n    >\r\n      <div className={`radius${props.timerActive ? \" hidden\" : \"\"}`}>\r\n        <div\r\n          className={`radiusCircle${props.timerActive ? \" hidden\" : \"\"}`}\r\n        ></div>\r\n      </div>\r\n    </Hammer>\r\n  );\r\n};\r\n\r\nexport default Radius;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst minMinutes = 5;\r\n// const sec = 1;\r\nconst stepLength = 5;\r\n\r\nconst Timer = ({\r\n  startStep,\r\n  timeStep,\r\n  setTimeStep,\r\n  timerActive,\r\n  setTimerActive,\r\n  currentActivity,\r\n  setCurrentActivity,\r\n  GIFSArray,\r\n  currentGIF,\r\n  numberOfSessions,\r\n  currentSession,\r\n  setCurrentSession,\r\n  autoSwitch,\r\n  setAutoSwitch,\r\n}) => {\r\n  const [totalSeconds, setTotalSeconds] = useState(\r\n    (minMinutes + startStep * stepLength) * 60\r\n  );\r\n  const [intrvl, setIntrvl] = useState(0);\r\n\r\n  setTimeStep(startStep);\r\n\r\n  const formatTime = (time) => time.toString().padStart(2, \"0\");\r\n\r\n  const audio = new Audio(\"./static/sounds/uplifting-flute.mp3\");\r\n\r\n  useEffect(() => {\r\n    setTotalSeconds((minMinutes + timeStep * stepLength) * 60);\r\n  }, [timeStep, startStep]);\r\n\r\n  useEffect(() => {\r\n    // if (\r\n    //   autoSwitch &&\r\n    //   currentSession !== 1 &&\r\n    //   currentSession <= numberOfSessions + 1\r\n    // ) {\r\n    //   // console.log(currentSession, numberOfSessions, currentActivity);\r\n\r\n    //   if (currentSession > numberOfSessions) {\r\n    //     if (currentActivity === \"pause\") setTimerActive(true);\r\n    //     if (currentActivity === \"session\") setTimerActive(false);\r\n    //   } else {\r\n    //     setTimerActive(true);\r\n    //   }\r\n    // }\r\n\r\n    if (timerActive) {\r\n      setIntrvl(\r\n        setInterval(() => {\r\n          if (timerActive === true) {\r\n            setTotalSeconds((totalSeconds) => {\r\n              // console.log(totalSeconds);\r\n              document.getElementsByClassName(\r\n                \"plantContainer\"\r\n              )[0].style.background = `conic-gradient(mediumslateblue ${(totalSeconds /\r\n                ((minMinutes + startStep * stepLength) * 60)) *\r\n                360}deg, rosybrown 0deg)`;\r\n              return totalSeconds - 1;\r\n            });\r\n          }\r\n        }, 1000)\r\n      );\r\n    } else {\r\n      setTimeStep(timeStep);\r\n      setTotalSeconds((minMinutes + timeStep * stepLength) * 60);\r\n      clearInterval(intrvl);\r\n    }\r\n\r\n    return () => clearInterval(intrvl);\r\n  }, [timerActive]);\r\n\r\n  // console.log(totalSeconds);\r\n\r\n  let minutes = Math.floor(totalSeconds / 60);\r\n  let seconds = totalSeconds - Math.floor(totalSeconds / 60) * 60;\r\n\r\n  if (totalSeconds === 0 && timerActive) {\r\n    // console.log(\"timeStep\", timeStep);\r\n    // console.log(\"totalSeconds === 0\");\r\n    audio.play();\r\n    clearInterval(intrvl);\r\n    // console.log(currentActivity, \" \", currentSession, \"/\", numberOfSessions);\r\n\r\n    // console.log(autoSwitch, timerActive);\r\n\r\n    if (currentSession < numberOfSessions) {\r\n      // console.log(currentSession, \" < \", numberOfSessions);\r\n      if (currentActivity === \"pause\") {\r\n        setCurrentSession(currentSession + 1);\r\n      }\r\n\r\n      setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n      setTimerActive(autoSwitch);\r\n    }\r\n\r\n    if (currentSession === numberOfSessions) {\r\n      // console.log(currentSession, \" = \", numberOfSessions);\r\n\r\n      if (currentActivity === \"session\") {\r\n        setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n        setTimerActive(autoSwitch);\r\n      } else if (currentActivity === \"pause\") {\r\n        setAutoSwitch(false);\r\n        setTimerActive(false);\r\n      }\r\n    }\r\n\r\n    // setTotalSeconds((5 + timeStep * 5) * 60);\r\n    // setTimeStep(timeStep);\r\n  }\r\n\r\n  if (totalSeconds <= 0) {\r\n    minutes = 0;\r\n    seconds = 0;\r\n  }\r\n\r\n  // console.log(GIFSArray[currentGIF]);\r\n  // backgroundImage: GIFSArray[currentGIF]\r\n\r\n  return (\r\n    <div className=\"timerContainer\">\r\n      <div\r\n        className={`timerBackground ${\r\n          currentActivity === \"session\"\r\n            ? \"sessionBackground\"\r\n            : \"pauseBackground\"\r\n        }`}\r\n        style={{ backgroundImage: `url(${GIFSArray[currentGIF]})` }}\r\n      ></div>\r\n      <div className=\"timer\">\r\n        {formatTime(minutes)}:{formatTime(seconds)}\r\n      </div>\r\n      <div className=\"timerText\">\r\n        {currentActivity === \"session\"\r\n          ? `Session ${currentSession}/${numberOfSessions}`\r\n          : `Pause`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nconst PlantSettings = (props) => {\r\n  const addGIF = (e) => {\r\n    // console.log(e)\r\n\r\n    let gifUrl = document.getElementById(\"url_input\").value;\r\n    let tempArr = [...props.GIFSArray, gifUrl];\r\n    if (gifUrl.trim()) props.setGIFSArray(tempArr);\r\n    localStorage.setItem(\r\n      `${props.currentActivity}GIFSArray`,\r\n      JSON.stringify(tempArr)\r\n    );\r\n    document.getElementById(\"url_input\").value = \"\";\r\n    // console.log(props.GIFSArray);\r\n  };\r\n\r\n  const useGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    // console.log(gifId, props.GIFSArray.length);\r\n    if (gifId >= 0 && gifId <= props.GIFSArray.length) {\r\n      props.setCurrentGIF(gifId);\r\n      //   console.log(`url(${props.GIFSArray[gifId - 1]})`);\r\n      if (document.getElementById(`${props.currentActivity}Background`)) {\r\n        document.getElementById(\r\n          `${props.currentActivity}Background`\r\n        ).style.backgroundImage = `url(${props.GIFSArray[gifId]})`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    console.log(gifId, props.currentGIF);\r\n    if (\r\n      gifId >= 0 &&\r\n      gifId <= props.GIFSArray.length &&\r\n      gifId !== props.currentGIF\r\n    ) {\r\n      let tempArr = props.GIFSArray.filter((g, idx) => idx !== gifId);\r\n      props.setGIFSArray(tempArr);\r\n      localStorage.setItem(\r\n        `${props.currentActivity}GIFSArray`,\r\n        JSON.stringify(tempArr)\r\n      );\r\n      if (gifId < props.currentGIF) props.setCurrentGIF(props.currentGIF - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settingsContainer\">\r\n      {props.GIFSArray.map((g, idx) => (\r\n        <div\r\n          className=\"settings_options\"\r\n          key={`${g.slice(0, 5) + g.slice(-5)}`}\r\n        >\r\n          <p>{idx + 1}</p>\r\n          <img className=\"gif_preview\" alt=\"gif_preview\" src={g} />\r\n          <div className=\"settings_button_container\">\r\n            <button className=\"settings_button\" onClick={useGIF}>\r\n              Use\r\n            </button>\r\n            <button\r\n              className=\"settings_button delete_button\"\r\n              onClick={deleteGIF}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"input_container settings_options\">\r\n        <input\r\n          id=\"url_input\"\r\n          className=\"background_input\"\r\n          placeholder=\"Paste GIF's URL here\"\r\n        ></input>\r\n        <button className=\"settings_button\" onClick={addGIF}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlantSettings;\r\n","import React from \"react\";\r\n\r\nconst SessionSettings = (props) => {\r\n  const decreaseNumberOfSessions = () => {\r\n    if (\r\n      props.numberOfSessions > 1 &&\r\n      props.numberOfSessions > props.currentSession\r\n    )\r\n      props.setNumberOfSessions(props.numberOfSessions - 1);\r\n  };\r\n\r\n  const increaseNumberOfSessions = () => {\r\n    props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    props.setAutoSwitch(true);\r\n  };\r\n\r\n  const decreaseNumberOfCurrentSession = () => {\r\n    if (props.currentSession > 1) {\r\n      props.setCurrentSession(props.currentSession - 1);\r\n      props.setAutoSwitch(true);\r\n    }\r\n  };\r\n\r\n  const increaseNumberOfCurrentSession = () => {\r\n    props.setCurrentSession(props.currentSession + 1);\r\n    if (props.currentSession > props.numberOfSessions - 1) {\r\n      props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionSettings\">\r\n      <div className=\"settings_options\">\r\n        <p>Auto start next session/pause?</p>\r\n        <div className=\"autoStartButtonsContainer\">\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"autoStartButtonsActive\" : \"\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"\" : \"autoStartButtonsActive\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"settings_options\">\r\n        <p>How many sessions today?</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"lessSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfSessions}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.numberOfSessions}</p>\r\n          <button\r\n            id=\"moreSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfSessions}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"settings_options\">\r\n        <p>Number of current session</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"minusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfCurrentSession}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.currentSession}</p>\r\n          <button\r\n            id=\"plusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfCurrentSession}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionSettings;\r\n","import React from \"react\";\r\n\r\nconst Buttons = ({ timerActive, setTimerActive, setAutoSwitch }) => {\r\n  return timerActive ? (\r\n    <React.Fragment>\r\n      <button\r\n        className=\"mainScreenButtons\"\r\n        onClick={() => {\r\n          setTimerActive(false);\r\n          setAutoSwitch(false);\r\n        }}\r\n      >\r\n        Give Up\r\n      </button>\r\n    </React.Fragment>\r\n  ) : (\r\n    <button className=\"mainScreenButtons\" onClick={() => setTimerActive(true)}>\r\n      Start\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Radius from \"./Radius\";\r\nimport Timer from \"./Timer\";\r\nimport PlantSettings from \"./PlantSettings\";\r\nimport SessionSettings from \"./SessionSettings\";\r\n\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst Plant = (props) => {\r\n  // console.log(props);\r\n  const [timeStep, setTimeStep] = useState(props.startStep);\r\n\r\n  // if (document.querySelector(\"plantContainer\")) {\r\n  //   let plantContainer = document\r\n  //     .querySelector(\"plantContainer\")\r\n  //     .getBoundingClientRect();\r\n  //   console.log(plantContainer);\r\n  // }\r\n\r\n  let plantContainerBoundaries = null;\r\n\r\n  useEffect(() => {\r\n    if (document.querySelector(\".plantContainer\")) {\r\n      plantContainerBoundaries = document\r\n        .querySelector(\".plantContainer\")\r\n        .getBoundingClientRect();\r\n      // console.log(plantContainerBoundaries);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={`plantContainer ${props.timerActive ? \"\" : \"\"}`}>\r\n        <Radius\r\n          plantContainerBoundaries={plantContainerBoundaries}\r\n          setTimeStep={setTimeStep}\r\n          timerActive={props.timerActive}\r\n          startStep={props.startStep}\r\n          setStartStep={props.setStartStep}\r\n        />\r\n\r\n        <div className=\"plant\">\r\n          <Timer\r\n            startStep={props.startStep}\r\n            timeStep={timeStep}\r\n            setTimeStep={setTimeStep}\r\n            timerActive={props.timerActive}\r\n            setTimerActive={props.setTimerActive}\r\n            currentActivity={props.currentActivity}\r\n            setCurrentActivity={props.setCurrentActivity}\r\n            GIFSArray={props.GIFSArray}\r\n            currentGIF={props.currentGIF}\r\n            numberOfSessions={props.numberOfSessions}\r\n            currentSession={props.currentSession}\r\n            setCurrentSession={props.setCurrentSession}\r\n            autoSwitch={props.autoSwitch}\r\n            setAutoSwitch={props.setAutoSwitch}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Buttons\r\n        timerActive={props.timerActive}\r\n        setTimerActive={props.setTimerActive}\r\n        setAutoSwitch={props.setAutoSwitch}\r\n      />\r\n      <SessionSettings\r\n        currentSession={props.currentSession}\r\n        setCurrentSession={props.setCurrentSession}\r\n        numberOfSessions={props.numberOfSessions}\r\n        setNumberOfSessions={props.setNumberOfSessions}\r\n        autoSwitch={props.autoSwitch}\r\n        setAutoSwitch={props.setAutoSwitch}\r\n        timerActive={props.timerActive}\r\n        setTimerActive={props.setTimerActive}\r\n      />\r\n      <PlantSettings\r\n        currentActivity={props.currentActivity}\r\n        GIFSArray={props.GIFSArray}\r\n        setGIFSArray={props.setGIFSArray}\r\n        currentGIF={props.currentGIF}\r\n        setCurrentGIF={props.setCurrentGIF}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\nimport Plant from \"./Plant\";\r\n\r\nconst SessionPlant = (props) => {\r\n  return (\r\n    <Plant\r\n      currentActivity={props.currentActivity}\r\n      setCurrentActivity={props.setCurrentActivity}\r\n      startStep={props.sessionStartStep}\r\n      setStartStep={props.setSessionStartStep}\r\n      GIFSArray={props.GIFSArray}\r\n      setGIFSArray={props.setGIFSArray}\r\n      currentGIF={props.currentGIF}\r\n      setCurrentGIF={props.setCurrentGIF}\r\n      numberOfSessions={props.numberOfSessions}\r\n      setNumberOfSessions={props.setNumberOfSessions}\r\n      currentSession={props.currentSession}\r\n      setCurrentSession={props.setCurrentSession}\r\n      autoSwitch={props.autoSwitch}\r\n      setAutoSwitch={props.setAutoSwitch}\r\n      timerActive={props.timerActive}\r\n      setTimerActive={props.setTimerActive}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SessionPlant;\r\n","import React from \"react\";\r\nimport Plant from \"./Plant\";\r\n\r\nconst PausePlant = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <Plant\r\n      currentActivity={props.currentActivity}\r\n      setCurrentActivity={props.setCurrentActivity}\r\n      startStep={props.pauseStartStep}\r\n      setStartStep={props.setPauseStartStep}\r\n      GIFSArray={props.GIFSArray}\r\n      setGIFSArray={props.setGIFSArray}\r\n      currentGIF={props.currentGIF}\r\n      setCurrentGIF={props.setCurrentGIF}\r\n      numberOfSessions={props.numberOfSessions}\r\n      setNumberOfSessions={props.setNumberOfSessions}\r\n      currentSession={props.currentSession}\r\n      setCurrentSession={props.setCurrentSession}\r\n      autoSwitch={props.autoSwitch}\r\n      setAutoSwitch={props.setAutoSwitch}\r\n      timerActive={props.timerActive}\r\n      setTimerActive={props.setTimerActive}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PausePlant;\r\n","import React from \"react\";\r\n\r\nconst SessionControl = ({ currentActivity, setCurrentActivity }) => {\r\n  const changeActivity = (e) => {\r\n    // console.log(e.target.id);\r\n    if (e.target.id === \"pause\") {\r\n      document\r\n        .getElementById(\"session\")\r\n        .classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"pause\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"pause\");\r\n    } else if (e.target.id === \"session\") {\r\n      document.getElementById(\"pause\").classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"session\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"session\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionControlContainer\" onClick={changeActivity}>\r\n      <p\r\n        id=\"session\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"session\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        Session\r\n      </p>\r\n      <p\r\n        id=\"pause\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"pause\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        &nbsp;Pause&nbsp;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionControl;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport SessionPlant from \"./SessionPlant\";\r\nimport PausePlant from \"./PausePlant\";\r\n\r\nimport SessionControl from \"./SessionControl\";\r\n\r\nconst MainScreen = (props) => {\r\n  const [currentActivity, setCurrentActivity] = useState(\"pause\");\r\n  const [pauseStartStep, setPauseStartStep] = useState(1);\r\n  const [sessionStartStep, setSessionStartStep] = useState(9);\r\n  const [numberOfSessions, setNumberOfSessions] = useState(2);\r\n  const [currentSession, setCurrentSession] = useState(1);\r\n  const [autoSwitch, setAutoSwitch] = useState(true);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"pauseGIFSArray\") === null ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === [] ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"pauseGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (\r\n      localStorage.getItem(\"sessionGIFSArray\") === null ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === [] ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"sessionGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n        ])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const [pauseGIFSArray, setPauseGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"pauseGIFSArray\")) || [\r\n      \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n    ]\r\n  );\r\n  const [sessionGIFSArray, setSessionGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"sessionGIFSArray\")) || [\r\n      \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n    ]\r\n  );\r\n\r\n  const [currentSessionGIF, setCurrentSessionGIF] = useState(0);\r\n  const [currentPauseGIF, setCurrentPauseGIF] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     document.getElementById(\"pauseBackground\") &&\r\n  //     document.getElementById(\"sessionBackground\")\r\n  //   ) {\r\n  //     document.getElementById(\"pauseBackground\").style.backgroundImage =\r\n  //       pauseGIFSArray[currentPauseGIF];\r\n  //     document.getElementById(\"sessionBackground\").style.backgroundImage =\r\n  //       sessionGIFSArray[currentSessionGIF];\r\n  //   }\r\n  // });\r\n\r\n  // const handleRangeInput = (e) => {\r\n  //   // console.log(\"e\", e.target.value);\r\n  //   document.querySelector(\r\n  //     \".timerBackground\"\r\n  //   ).style.backgroundPosition = `${100 - e.target.value}%`;\r\n  // };\r\n\r\n  useEffect(() => {\r\n    function preventDefault(e) {\r\n      if (\r\n        e.target.className === \"radius\" ||\r\n        e.target.className === \"radiusCircle\"\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    document.body.addEventListener(\"touchmove\", preventDefault, {\r\n      passive: false,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainScreenContainer\">\r\n      <SessionControl\r\n        currentActivity={currentActivity}\r\n        setCurrentActivity={setCurrentActivity}\r\n      />\r\n\r\n      {currentActivity === \"session\" ? (\r\n        <SessionPlant\r\n          currentActivity={currentActivity}\r\n          setCurrentActivity={setCurrentActivity}\r\n          sessionStartStep={sessionStartStep}\r\n          setSessionStartStep={setSessionStartStep}\r\n          GIFSArray={sessionGIFSArray}\r\n          setGIFSArray={setSessionGIFSArray}\r\n          currentGIF={currentSessionGIF}\r\n          setCurrentGIF={setCurrentSessionGIF}\r\n          numberOfSessions={numberOfSessions}\r\n          setNumberOfSessions={setNumberOfSessions}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          autoSwitch={autoSwitch}\r\n          setAutoSwitch={setAutoSwitch}\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n        />\r\n      ) : (\r\n        <PausePlant\r\n          currentActivity={currentActivity}\r\n          setCurrentActivity={setCurrentActivity}\r\n          pauseStartStep={pauseStartStep}\r\n          setPauseStartStep={setPauseStartStep}\r\n          GIFSArray={pauseGIFSArray}\r\n          setGIFSArray={setPauseGIFSArray}\r\n          currentGIF={currentPauseGIF}\r\n          setCurrentGIF={setCurrentPauseGIF}\r\n          numberOfSessions={numberOfSessions}\r\n          setNumberOfSessions={setNumberOfSessions}\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          autoSwitch={autoSwitch}\r\n          setAutoSwitch={setAutoSwitch}\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n        />\r\n      )}\r\n\r\n      {/* <input\r\n        type=\"range\"\r\n        id=\"bg_position\"\r\n        name=\"bg_position\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        // value=\"50\"\r\n        onChange={handleRangeInput}\r\n      ></input>\r\n      <input id=\"bg_url\" placeholder=\"Paste link to your GIF here\"></input> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\n\r\n// import Header from \"./Components/HeaderContainer/Header\";\r\nimport MainScreen from \"./Components/MainScreenContainer/MainScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Header /> */}\r\n      <MainScreen />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n"],"sourceRoot":""}