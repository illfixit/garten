{"version":3,"sources":["Components/MainScreenContainer/Radius.js","Components/MainScreenContainer/Timer.js","Components/MainScreenContainer/Plant.js","Components/MainScreenContainer/StartStopButton.js","Components/MainScreenContainer/SessionSettings.js","Components/MainScreenContainer/GIFSettings.js","Components/MainScreenContainer/utils.js","Components/MainScreenContainer/LookSettings.js","Components/MainScreenContainer/FontSettings.js","Components/MainScreenContainer/ToggleViewButton.js","Components/MainScreenContainer/SessionPauseButton.js","Components/MainScreenContainer/MainScreen.js","App.js","index.js"],"names":["Radius","props","step","useRef","startStep","useEffect","rotateCircle","document","querySelector","current","timerActive","element","degree","transformString","concat","style","webkitTransform","MozTransform","msTransform","OTransform","transform","parentElement","background","react_default","a","createElement","es","onPan","event","target","className","rect","getBoundingClientRect","x","center","width","y","height","atan","Math","atan2","integer","floor","newStep","abs","setStartStep","Timer","_ref","setTimerActive","currentActivity","setCurrentActivity","GIFSArray","currentGIF","numberOfSessions","currentSession","setCurrentSession","autoSwitch","setAutoSwitch","_useState","useState","_useState2","Object","slicedToArray","totalSeconds","setTotalSeconds","_useState3","_useState4","intrvl","setIntrvl","formatTime","time","toString","padStart","audio","Audio","setInterval","getElementsByClassName","clearInterval","minutes","seconds","play","backgroundImage","Plant","plantContainerBoundaries","Fragment","id","MainScreenContainer_Radius","MainScreenContainer_Timer","Buttons","onClick","SessionSettings","setNumberOfSessions","GIFSettings","useGIF","e","gifId","firstChild","innerText","length","setCurrentGIF","getElementById","deleteGIF","console","log","tempArr","filter","g","idx","setGIFSArray","localStorage","setItem","JSON","stringify","map","key","slice","alt","src","placeholder","gifUrl","value","toConsumableArray","trim","getColor","colorName","type","getComputedStyle","getPropertyValue","setColor","setProperty","defBGColorArr","split","el","parseFloat","_defBGColorArr","bgh","bgs","bgl","defMainColorArr","LookSettings","getItem","substring","mainColorInputValue","setMainColorInputValue","documentElement","parse","bghValue","setBghValue","_useState5","_useState6","bgsValue","setBgsValue","_useState7","_useState8","bglValue","setBglValue","changeColor","max","defaultValue","onChange","h","s","l","min","f","n","k","color","round","hslToHex","parseInt","FontSettings","fontsArray","setFontsArray","forEach","font","addFont","fontName","fontFamily","join","link","setAttribute","head","appendChild","useFont","deleteFont","ToggleViewButton","view","setView","SessionPauseButton","classList","remove","add","MainScreen","pauseStartStep","setPauseStartStep","sessionStartStep","setSessionStartStep","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","undefined","_useState15","_useState16","pauseGIFSArray","setPauseGIFSArray","_useState17","_useState18","sessionGIFSArray","setSessionGIFSArray","_useState19","_useState20","currentSessionGIF","setCurrentSessionGIF","_useState21","_useState22","currentPauseGIF","setCurrentPauseGIF","body","addEventListener","preventDefault","passive","MainScreenContainer_SessionPauseButton","MainScreenContainer_Plant","StartStopButton","MainScreenContainer_ToggleViewButton","MainScreenContainer_SessionSettings","MainScreenContainer_LookSettings","MainScreenContainer_GIFSettings","MainScreenContainer_FontSettings","App","MainScreenContainer_MainScreen","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.5691817d.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Hammer from \"rc-hammerjs\";\r\n\r\n// let lastStep = 0;\r\n\r\nconst Radius = (props) => {\r\n  const step = useRef(props.startStep);\r\n  const interval = 180 / 11.5;\r\n\r\n  useEffect(() => {\r\n    // console.log(\"toggle Timer: active: \", props.timerActive, step.current);\r\n    rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n  }, [props.timerActive]);\r\n\r\n  const rotateCircle = (element, degree) => {\r\n    let transformString = `rotate(${degree}deg) scale(1) skewX(0deg) skewY(0deg)`;\r\n\r\n    // now attach that variable to each prefixed style\r\n    element.style.webkitTransform = transformString;\r\n    element.style.MozTransform = transformString;\r\n    element.style.msTransform = transformString;\r\n    element.style.OTransform = transformString;\r\n    element.style.transform = transformString;\r\n\r\n    element.parentElement.style.background = `conic-gradient(var(--mainColor) ${degree}deg, var(--secondaryColor) 0deg)`;\r\n  };\r\n\r\n  const handlePan = (event) => {\r\n    if (\r\n      event.target.className === \"radius\" ||\r\n      event.target.className === \"radiusCircle\"\r\n    ) {\r\n      // console.log(\"handlePan\");\r\n\r\n      // window.scrollTo(0, 0);\r\n\r\n      let rect;\r\n      if (event.target.className === \"radius\")\r\n        rect = event.target.parentElement.getBoundingClientRect();\r\n      if (event.target.className === \"radiusCircle\")\r\n        rect = event.target.parentElement.parentElement.getBoundingClientRect();\r\n\r\n      let x = (event.center.x - rect.x) / rect.width - 0.5; //x position within the element.\r\n      let y = 0.5 - (event.center.y - rect.y) / rect.height; //y position within the element.\r\n\r\n      let atan = (Math.atan2(y, x) * 180) / 3.1415;\r\n      if (atan < -180) atan = -180;\r\n      if (atan > 180) atan = 180;\r\n\r\n      let degree = 0;\r\n\r\n      if (atan <= 90 && atan >= -180) degree = -atan + 90;\r\n      if (atan > 90 && atan <= 180) degree = -atan + 450;\r\n      if (degree > 0 && degree < 10) degree = 0;\r\n\r\n      let integer = Math.floor(degree / interval);\r\n      let decimal = degree - integer;\r\n\r\n      let newStep = decimal >= 0.5 ? integer + 1 : integer;\r\n      step.current =\r\n        Math.abs(step.current - newStep) > 3 ? step.current : newStep;\r\n\r\n      rotateCircle(document.querySelector(\".radius\"), step.current * interval);\r\n\r\n      props.setStartStep(step.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Hammer onPan={handlePan}>\r\n      <div className={`radius${props.timerActive ? \" hidden\" : \"\"}`}>\r\n        <div\r\n          className={`radiusCircle${props.timerActive ? \" hidden\" : \"\"}`}\r\n        ></div>\r\n      </div>\r\n    </Hammer>\r\n  );\r\n};\r\n\r\nexport default Radius;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst minMinutes = 5;\r\n// const sec = 1;\r\nconst stepLength = 5;\r\n\r\nconst testing_value = 1;\r\n\r\nconst Timer = ({\r\n  startStep,\r\n  // timeStep,\r\n  // setTimeStep,\r\n  setStartStep,\r\n  timerActive,\r\n  setTimerActive,\r\n  currentActivity,\r\n  setCurrentActivity,\r\n  GIFSArray,\r\n  currentGIF,\r\n  numberOfSessions,\r\n  currentSession,\r\n  setCurrentSession,\r\n  autoSwitch,\r\n  setAutoSwitch,\r\n}) => {\r\n  const [totalSeconds, setTotalSeconds] = useState(\r\n    (minMinutes + startStep * stepLength) * 60\r\n  );\r\n  const [intrvl, setIntrvl] = useState(0);\r\n\r\n  const formatTime = (time) => time.toString().padStart(2, \"0\");\r\n\r\n  const audio = new Audio(\"./static/sounds/uplifting-flute.mp3\");\r\n\r\n  useEffect(() => {\r\n    setTotalSeconds((minMinutes + startStep * stepLength) * 60);\r\n  }, [startStep]);\r\n\r\n  // useEffect(() => {\r\n  //   let timeOut;\r\n  //   let intervalStop;\r\n  //   let intervalStart;\r\n  //   let op = 100;\r\n\r\n  //   let evli = document.body.addEventListener(\"mousemove\", (e) => {\r\n  //     // console.log(\"mm\", timeOut, intervalStart, intervalStop, op);\r\n\r\n  //     function decreaseOpacity() {\r\n  //       intervalStop = setInterval(() => {\r\n  //         if (op >= 2) {\r\n  //           // console.log(\"decreaseOpacity\", op);\r\n  //           op = op - 2;\r\n  //           Array.from(\r\n  //             document.getElementsByClassName(\"sessionSettings\")\r\n  //           ).forEach((el) => (el.style.opacity = op / 100));\r\n\r\n  //           Array.from(\r\n  //             document.getElementsByClassName(\"settings_options\")\r\n  //           ).forEach((el) => (el.style.opacity = op / 100));\r\n\r\n  //           document.getElementsByClassName(\r\n  //             \"sessionControlContainer\"\r\n  //           )[0].style.opacity = op / 100;\r\n  //           document.getElementsByClassName(\r\n  //             \"mainScreenButtons\"\r\n  //           )[0].style.opacity = op / 100;\r\n  //         } else {\r\n  //           clearInterval(intervalStop);\r\n  //           intervalStop = null;\r\n  //         }\r\n  //       }, 20);\r\n  //     }\r\n\r\n  //     function increaseOpacity() {\r\n  //       if (!intervalStart) {\r\n  //         intervalStart = setInterval(() => {\r\n  //           // console.log(\"increaseOpacity\", op);\r\n\r\n  //           if (op < 100) {\r\n  //             op = op + 5;\r\n  //             Array.from(\r\n  //               document.getElementsByClassName(\"sessionSettings\")\r\n  //             ).forEach((el) => (el.style.opacity = op / 100));\r\n\r\n  //             Array.from(\r\n  //               document.getElementsByClassName(\"settings_options\")\r\n  //             ).forEach((el) => (el.style.opacity = op / 100));\r\n\r\n  //             document.getElementsByClassName(\r\n  //               \"sessionControlContainer\"\r\n  //             )[0].style.opacity = op / 100;\r\n  //             document.getElementsByClassName(\r\n  //               \"mainScreenButtons\"\r\n  //             )[0].style.opacity = op / 100;\r\n  //           } else {\r\n  //             clearInterval(intervalStart);\r\n  //             intervalStart = null;\r\n  //           }\r\n  //         }, 50);\r\n\r\n  //         return intervalStart;\r\n  //       }\r\n  //     }\r\n\r\n  //     const mouse_stopped = () => {\r\n  //       // console.log(\"mouse_stopped\");\r\n\r\n  //       clearTimeout(timeOut);\r\n\r\n  //       clearInterval(intervalStart);\r\n  //       decreaseOpacity();\r\n  //     };\r\n\r\n  //     if (op < 100) {\r\n  //       increaseOpacity();\r\n  //       //   setTimeout(() => {\r\n  //       //     clearInterval(intrvl);\r\n  //       //   }, 1500);\r\n  //       // } else {\r\n  //       //   clearInterval(intervalStart);\r\n  //     }\r\n\r\n  //     clearTimeout(timeOut);\r\n  //     timeOut = setTimeout(mouse_stopped, 7900);\r\n  //     clearInterval(intervalStop);\r\n  //   });\r\n\r\n  //   return document.body.removeEventListener(\"mousemove\", evli);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (timerActive) {\r\n      setIntrvl(\r\n        setInterval(() => {\r\n          if (timerActive === true) {\r\n            setTotalSeconds((totalSeconds) => {\r\n              // console.log(totalSeconds);\r\n              document.getElementsByClassName(\r\n                \"plantContainer\"\r\n              )[0].style.background = `conic-gradient(var(--mainColor) ${(totalSeconds /\r\n                ((minMinutes + startStep * stepLength) * 60)) *\r\n                360}deg, var(--secondaryColor) 0deg)`;\r\n              return totalSeconds - 1;\r\n            });\r\n          }\r\n        }, 1000 * testing_value)\r\n      );\r\n    } else {\r\n      setTotalSeconds((minMinutes + startStep * stepLength) * 60);\r\n      clearInterval(intrvl);\r\n    }\r\n\r\n    return () => clearInterval(intrvl);\r\n  }, [timerActive]);\r\n\r\n  // console.log(totalSeconds);\r\n\r\n  let minutes = Math.floor(totalSeconds / 60);\r\n  let seconds = totalSeconds - Math.floor(totalSeconds / 60) * 60;\r\n\r\n  if (totalSeconds === 0 && timerActive) {\r\n    // console.log(\"timeStep\", timeStep);\r\n    // console.log(\"totalSeconds === 0\");\r\n    audio.play();\r\n    clearInterval(intrvl);\r\n    // console.log(currentActivity, \" \", currentSession, \"/\", numberOfSessions);\r\n\r\n    // console.log(autoSwitch, timerActive);\r\n\r\n    if (currentSession < numberOfSessions) {\r\n      // console.log(currentSession, \" < \", numberOfSessions);\r\n      if (currentActivity === \"pause\") {\r\n        setCurrentSession(currentSession + 1);\r\n      }\r\n\r\n      setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n      setTimerActive(autoSwitch);\r\n    }\r\n\r\n    if (currentSession === numberOfSessions) {\r\n      // console.log(currentSession, \" = \", numberOfSessions);\r\n\r\n      if (currentActivity === \"session\") {\r\n        setCurrentActivity(currentActivity === \"pause\" ? \"session\" : \"pause\");\r\n        setTimerActive(autoSwitch);\r\n      } else if (currentActivity === \"pause\") {\r\n        setAutoSwitch(false);\r\n        setTimerActive(false);\r\n      }\r\n    }\r\n\r\n    // setTotalSeconds((5 + timeStep * 5) * 60);\r\n    // setTimeStep(timeStep);\r\n  }\r\n\r\n  if (totalSeconds <= 0) {\r\n    minutes = 0;\r\n    seconds = 0;\r\n  }\r\n\r\n  // console.log(GIFSArray[currentGIF]);\r\n  // backgroundImage: GIFSArray[currentGIF]\r\n\r\n  return (\r\n    <div className=\"timerContainer\">\r\n      <div\r\n        className={`timerBackground ${\r\n          currentActivity === \"session\"\r\n            ? \"sessionBackground\"\r\n            : \"pauseBackground\"\r\n        }`}\r\n        style={{ backgroundImage: `url(${GIFSArray[currentGIF]})` }}\r\n      ></div>\r\n      <div className=\"timer\">\r\n        {formatTime(minutes)}:{formatTime(seconds)}\r\n      </div>\r\n      <div className=\"timerText\">\r\n        {currentActivity === \"session\"\r\n          ? `Session ${currentSession}/${numberOfSessions}`\r\n          : `Pause`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect } from \"react\";\r\nimport Radius from \"./Radius\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst Plant = (props) => {\r\n  // console.log(props);\r\n\r\n  let plantContainerBoundaries = null;\r\n\r\n  useEffect(() => {\r\n    if (document.querySelector(\".plantContainer\")) {\r\n      plantContainerBoundaries = document\r\n        .querySelector(\".plantContainer\")\r\n        .getBoundingClientRect();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`plantContainer ${props.timerActive ? \"\" : \"\"}`}\r\n        id={props.currentActivity}\r\n      >\r\n        <Radius\r\n          plantContainerBoundaries={plantContainerBoundaries}\r\n          timerActive={props.timerActive}\r\n          startStep={props.startStep}\r\n          setStartStep={props.setStartStep}\r\n        />\r\n\r\n        <div className=\"plant\">\r\n          <Timer\r\n            startStep={props.startStep}\r\n            setStartStep={props.setStartStep}\r\n            timerActive={props.timerActive}\r\n            setTimerActive={props.setTimerActive}\r\n            currentActivity={props.currentActivity}\r\n            setCurrentActivity={props.setCurrentActivity}\r\n            GIFSArray={props.GIFSArray}\r\n            currentGIF={props.currentGIF}\r\n            numberOfSessions={props.numberOfSessions}\r\n            currentSession={props.currentSession}\r\n            setCurrentSession={props.setCurrentSession}\r\n            autoSwitch={props.autoSwitch}\r\n            setAutoSwitch={props.setAutoSwitch}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\n\r\nconst Buttons = ({ timerActive, setTimerActive, setAutoSwitch }) => {\r\n  return timerActive ? (\r\n    <React.Fragment>\r\n      <button\r\n        className=\"mainScreenButtons\"\r\n        onClick={() => {\r\n          setTimerActive(false);\r\n          setAutoSwitch(false);\r\n        }}\r\n      >\r\n        Give Up\r\n      </button>\r\n    </React.Fragment>\r\n  ) : (\r\n    <button className=\"mainScreenButtons\" onClick={() => setTimerActive(true)}>\r\n      Start\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst SessionSettings = (props) => {\r\n  const decreaseNumberOfSessions = () => {\r\n    if (\r\n      props.numberOfSessions > 1 &&\r\n      props.numberOfSessions > props.currentSession\r\n    )\r\n      props.setNumberOfSessions(props.numberOfSessions - 1);\r\n  };\r\n\r\n  const increaseNumberOfSessions = () => {\r\n    props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    props.setAutoSwitch(true);\r\n  };\r\n\r\n  const decreaseNumberOfCurrentSession = () => {\r\n    if (props.currentSession > 1) {\r\n      props.setCurrentSession(props.currentSession - 1);\r\n      props.setAutoSwitch(true);\r\n    }\r\n  };\r\n\r\n  const increaseNumberOfCurrentSession = () => {\r\n    props.setCurrentSession(props.currentSession + 1);\r\n    if (props.currentSession > props.numberOfSessions - 1) {\r\n      props.setNumberOfSessions(props.numberOfSessions + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionSettings\">\r\n      <div className=\"settings_options\">\r\n        <p>Auto start next session/pause?</p>\r\n        <div className=\"autoStartButtonsContainer\">\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"autoStartButtonsActive\" : \"\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className={`autoStartButtons ${\r\n              props.autoSwitch ? \"\" : \"autoStartButtonsActive\"\r\n            }`}\r\n            onClick={() => props.setAutoSwitch(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"settings_options\">\r\n        <p>How many sessions today?</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"lessSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfSessions}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.numberOfSessions}</p>\r\n          <button\r\n            id=\"moreSessions\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfSessions}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"settings_options\">\r\n        <p>Number of current session</p>\r\n        <span className=\"sessionSettingsButtonsContainer\">\r\n          <button\r\n            id=\"minusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={decreaseNumberOfCurrentSession}\r\n          >\r\n            -\r\n          </button>\r\n          <p id=\"numberOfSessions\">{props.currentSession}</p>\r\n          <button\r\n            id=\"plusCurrentSession\"\r\n            className=\"sessionSettingsButton\"\r\n            onClick={increaseNumberOfCurrentSession}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionSettings;\r\n","import React from \"react\";\r\n\r\nconst GIFSettings = (props) => {\r\n  // console.log(props);\r\n\r\n  const addGIF = (e) => {\r\n    // console.log(e)\r\n\r\n    let gifUrl = document.getElementById(\"url_input\").value;\r\n    let tempArr = [...props.GIFSArray, gifUrl];\r\n    if (gifUrl.trim()) props.setGIFSArray(tempArr);\r\n    localStorage.setItem(\r\n      `${props.currentActivity}GIFSArray`,\r\n      JSON.stringify(tempArr)\r\n    );\r\n    document.getElementById(\"url_input\").value = \"\";\r\n    // console.log(props.GIFSArray);\r\n  };\r\n\r\n  const useGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    // console.log(gifId, props.GIFSArray.length);\r\n    if (gifId >= 0 && gifId <= props.GIFSArray.length) {\r\n      props.setCurrentGIF(gifId);\r\n      //   console.log(`url(${props.GIFSArray[gifId - 1]})`);\r\n      if (document.getElementById(`${props.currentActivity}Background`)) {\r\n        document.getElementById(\r\n          `${props.currentActivity}Background`\r\n        ).style.backgroundImage = `url(${props.GIFSArray[gifId]})`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteGIF = (e) => {\r\n    let gifId = e.target.parentElement.parentElement.firstChild.innerText - 1;\r\n    console.log(gifId, props.currentGIF);\r\n    if (\r\n      gifId >= 0 &&\r\n      gifId <= props.GIFSArray.length &&\r\n      gifId !== props.currentGIF\r\n    ) {\r\n      let tempArr = props.GIFSArray.filter((g, idx) => idx !== gifId);\r\n      props.setGIFSArray(tempArr);\r\n      localStorage.setItem(\r\n        `${props.currentActivity}GIFSArray`,\r\n        JSON.stringify(tempArr)\r\n      );\r\n      if (gifId < props.currentGIF) props.setCurrentGIF(props.currentGIF - 1);\r\n    }\r\n  };\r\n\r\n  return props.currentActivity ? (\r\n    <div>\r\n      {props.GIFSArray.map((g, idx) => (\r\n        <div\r\n          className=\"settings_options\"\r\n          key={`${g.slice(0, 5) + g.slice(-5)}`}\r\n        >\r\n          <p>{idx + 1}</p>\r\n          <img className=\"gif_preview\" alt=\"gif_preview\" src={g} />\r\n          <div className=\"settings_button_container\">\r\n            <button className=\"settings_button\" onClick={useGIF}>\r\n              Use\r\n            </button>\r\n            <button\r\n              className=\"settings_button delete_button\"\r\n              onClick={deleteGIF}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"input_container settings_options\">\r\n        <input\r\n          id=\"url_input\"\r\n          className=\"background_input\"\r\n          placeholder=\"Paste GIF's URL here\"\r\n        ></input>\r\n        <button className=\"settings_button\" onClick={addGIF}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default GIFSettings;\r\n","// const getTintedColor = (color, v) => {\r\n//   if (color.length > 6) {\r\n//     color = color.substring(1, color.length);\r\n//   }\r\n//   var rgb = parseInt(color, 16);\r\n//   var r = Math.abs(((rgb >> 16) & 0xff) + v);\r\n//   if (r > 255) r = r - (r - 255);\r\n//   var g = Math.abs(((rgb >> 8) & 0xff) + v);\r\n//   if (g > 255) g = g - (g - 255);\r\n//   var b = Math.abs((rgb & 0xff) + v);\r\n//   if (b > 255) b = b - (b - 255);\r\n//   r = Number(r < 0 || isNaN(r)) ? 0 : (r > 255 ? 255 : r).toString(16);\r\n//   if (r.length == 1) r = \"0\" + r;\r\n//   g = Number(g < 0 || isNaN(g)) ? 0 : (g > 255 ? 255 : g).toString(16);\r\n//   if (g.length == 1) g = \"0\" + g;\r\n//   b = Number(b < 0 || isNaN(b)) ? 0 : (b > 255 ? 255 : b).toString(16);\r\n//   if (b.length == 1) b = \"0\" + b;\r\n//   return \"#\" + r + g + b;\r\n// };\r\n\r\nconst hslToHex = (h, s, l) => {\r\n  h = parseFloat(h);\r\n  s = parseFloat(s);\r\n  l = parseFloat(l);\r\n  l /= 100;\r\n  const a = (s * Math.min(l, 1 - l)) / 100;\r\n  const f = (n) => {\r\n    const k = (n + h / 30) % 12;\r\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n    return Math.round(255 * color)\r\n      .toString(16)\r\n      .padStart(2, \"0\"); // convert to Hex and prefix \"0\" if needed\r\n  };\r\n  return `#${f(0)}${f(8)}${f(4)}`;\r\n};\r\n\r\nconst getColor = (colorName, type) => {\r\n  return getComputedStyle(document.querySelector(\":root\")).getPropertyValue(\r\n    `--${colorName}${type ? \"-\" + type : \"\"}`\r\n  );\r\n};\r\n\r\nconst setColor = (colorName, type, value) => {\r\n  // console.log(colorName, type, value);\r\n  document\r\n    .querySelector(\":root\")\r\n    .style.setProperty(`--${colorName}${type ? \"-\" + type : \"\"}`, value);\r\n};\r\n\r\nexport { hslToHex, getColor, setColor };\r\n","import React, { useState } from \"react\";\r\nimport { hslToHex, getColor, setColor } from \"./utils\";\r\n\r\nconst defBGColor = getColor(\"backgroundColor\");\r\nconst defBGColorArr = defBGColor\r\n  .split(\"(\")[1]\r\n  .split(\")\")[0]\r\n  .split(\",\")\r\n  .map((el) => parseFloat(el));\r\n\r\nlet [bgh, bgs, bgl] = defBGColorArr;\r\nbgs = `${bgs}%`;\r\nbgl = `${bgl}%`;\r\n\r\nconst defMainColor = getColor(\"mainColor\");\r\nconst defMainColorArr = defMainColor\r\n  .split(\"(\")[1]\r\n  .split(\")\")[0]\r\n  .split(\",\")\r\n  .map((el) => el.trim());\r\n\r\nconst LookSettings = (props) => {\r\n  const [mainColorInputValue, setMainColorInputValue] = useState(\r\n    (localStorage.getItem(\"mch\") &&\r\n      localStorage\r\n        .getItem(\"mch\")\r\n        .substring(1, localStorage.getItem(\"mch\").length - 1)) ||\r\n      defMainColorArr[0]\r\n  );\r\n\r\n  document.documentElement.style.setProperty(\r\n    \"--mainColor-h\",\r\n    mainColorInputValue\r\n  );\r\n\r\n  const [bghValue, setBghValue] = useState(\r\n    JSON.parse(localStorage.getItem(\"bgh\")) || bgh\r\n  );\r\n  const [bgsValue, setBgsValue] = useState(\r\n    JSON.parse(localStorage.getItem(\"bgs\")) || bgs\r\n  );\r\n  const [bglValue, setBglValue] = useState(\r\n    JSON.parse(localStorage.getItem(\"bgl\")) || bgl\r\n  );\r\n\r\n  document.documentElement.style.setProperty(\"--backgroundColor-h\", bghValue);\r\n\r\n  document.documentElement.style.setProperty(\"--backgroundColor-s\", bgsValue);\r\n\r\n  document.documentElement.style.setProperty(\"--backgroundColor-l\", bglValue);\r\n\r\n  localStorage.setItem(\"bgh\", JSON.stringify(bghValue));\r\n  localStorage.setItem(\"bgs\", JSON.stringify(bgsValue));\r\n  localStorage.setItem(\"bgl\", JSON.stringify(bglValue));\r\n\r\n  // const [mainColorFull, setMainColorFull] = useState(false);\r\n  // const [BgColorFull, setBgColorFull] = useState(false);\r\n\r\n  // const toggleBgColorView = (e) => {\r\n  //   setBgColorFull(!BgColorFull);\r\n  // };\r\n\r\n  const changeMainColor = (e) => {\r\n    setMainColorInputValue(e.target.value);\r\n    setColor(\"mainColor\", \"h\", e.target.value);\r\n\r\n    localStorage.setItem(\"mch\", JSON.stringify(e.target.value));\r\n  };\r\n\r\n  //   const changeBGColor = (e) => {\r\n  //     setBgColorInputValue({e.target.value});\r\n  //     setColor(\"backgroundColor\", \"h\", e.target.value);\r\n  //   };\r\n\r\n  const resetMainColor = (e) => {\r\n    setMainColorInputValue(defMainColorArr[0]);\r\n    setColor(\"mainColor\", \"h\", defMainColorArr[0]);\r\n    document.getElementById(\"mainColor\").value = defMainColorArr[0];\r\n\r\n    localStorage.setItem(\"mch\", JSON.stringify(defMainColorArr[0]));\r\n  };\r\n\r\n  const resetBGColor = (e) => {\r\n    setBghValue(bgh);\r\n    setBgsValue(bgs);\r\n    setBglValue(bgl);\r\n\r\n    setColor(\"backgroundColor\", \"h\", bgh);\r\n    setColor(\"backgroundColor\", \"s\", bgs);\r\n    setColor(\"backgroundColor\", \"l\", bgl);\r\n\r\n    console.log(bgh, bgs, bgl);\r\n\r\n    localStorage.setItem(\"bgh\", JSON.stringify(bgh));\r\n    localStorage.setItem(\"bgs\", JSON.stringify(bgs));\r\n    localStorage.setItem(\"bgl\", JSON.stringify(bgl));\r\n\r\n    document.getElementById(\"backgroundColor-h\").value = bgh;\r\n    // if (document.getElementById(\"backgroundColor-s\")) {\r\n    document.getElementById(\"backgroundColor-s\").value = parseInt(bgs);\r\n    // }\r\n    // if (document.getElementById(\"backgroundColor-l\")) {\r\n    document.getElementById(\"backgroundColor-l\").value = parseInt(bgl);\r\n    // }\r\n  };\r\n\r\n  const changeColor = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n\r\n    if (id === \"backgroundColor-h\") {\r\n      setBghValue(value);\r\n      setColor(id.split(\"-\")[0], \"h\", value);\r\n      localStorage.setItem(\"bgh\", JSON.stringify(value));\r\n    }\r\n\r\n    if (id === \"backgroundColor-s\") {\r\n      setBgsValue(value + \"%\");\r\n\r\n      setColor(id.split(\"-\")[0], \"s\", `${value}%`);\r\n      localStorage.setItem(\"bgs\", JSON.stringify(`${value}%`));\r\n    }\r\n\r\n    if (id === \"backgroundColor-l\") {\r\n      setBglValue(value + \"%\");\r\n\r\n      setColor(id.split(\"-\")[0], \"l\", `${value}%`);\r\n      // document.getElementById(\"backgroundColor-l\").value = bglValue;\r\n      localStorage.setItem(\"bgl\", JSON.stringify(`${value}%`));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionSettings\">\r\n      <div className=\"settings_options look_options\">\r\n        {/* Main color */}\r\n        <p>Main color:</p>\r\n        <input\r\n          id=\"mainColor\"\r\n          type=\"range\"\r\n          max=\"360\"\r\n          defaultValue={mainColorInputValue}\r\n          onChange={changeMainColor}\r\n        ></input>\r\n        <p id=\"resetMainColor\" className=\"resetButton\" onClick={resetMainColor}>\r\n          &#8634;\r\n        </p>\r\n      </div>\r\n      {/* BG color */}\r\n\r\n      <div className=\"settings_options\">\r\n        <div className=\"look_options_container\">\r\n          <div className=\" look_options\">\r\n            <p>Background color: {hslToHex(bghValue, bgsValue, bglValue)}</p>\r\n\r\n            <p id=\"resetBGColor\" className=\"resetButton\" onClick={resetBGColor}>\r\n              &#8634;\r\n            </p>\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\" look_options\">\r\n            <p>Hue</p>\r\n            <input\r\n              id=\"backgroundColor-h\"\r\n              type=\"range\"\r\n              max=\"360\"\r\n              defaultValue={bghValue}\r\n              onChange={changeColor}\r\n            ></input>\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\" look_options\">\r\n            <p>Saturation</p>\r\n            <input\r\n              id=\"backgroundColor-s\"\r\n              type=\"range\"\r\n              max=\"100\"\r\n              defaultValue={parseFloat(bgsValue)}\r\n              onChange={changeColor}\r\n            ></input>\r\n          </div>\r\n\r\n          <br />\r\n          <div className=\" look_options\">\r\n            <p>Lightness</p>\r\n            <input\r\n              id=\"backgroundColor-l\"\r\n              type=\"range\"\r\n              max=\"100\"\r\n              defaultValue={parseFloat(bglValue)}\r\n              onChange={changeColor}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LookSettings;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst FontSettings = (props) => {\r\n  let [fontsArray, setFontsArray] = useState([\"Norican\", \"Karla\", \"Open Sans\"]);\r\n\r\n  useEffect(() => {\r\n    // console.log(fontsArray);\r\n    if (fontsArray.length > 0) {\r\n      fontsArray.forEach((font) => addFont(font));\r\n    }\r\n  }, []);\r\n\r\n  const addFont = (font) => {\r\n    let fontName;\r\n    if (!font || typeof font != \"string\") {\r\n      fontName = document.getElementById(\"font_url_input\").value;\r\n    } else {\r\n      fontName = font;\r\n    }\r\n    // console.log(fontName);\r\n    if (typeof fontName === \"string\") {\r\n      fontName = fontName.trim();\r\n      let fontFamily = fontName;\r\n\r\n      if (fontName.split(\" \").length > 0) {\r\n        fontFamily = fontName.split(\" \").join(\"+\");\r\n      }\r\n\r\n      //   console.log(fontFamily);\r\n\r\n      let link = document.createElement(\"link\");\r\n      link.setAttribute(\"rel\", \"stylesheet\");\r\n      link.setAttribute(\"type\", \"text/css\");\r\n      link.setAttribute(\r\n        \"href\",\r\n        `https://fonts.googleapis.com/css?family=${fontFamily}`\r\n      );\r\n      document.head.appendChild(link);\r\n      if (!fontName in fontsArray) {\r\n        setFontsArray([...fontsArray, fontName]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const useFont = (event) => {\r\n    let font = event.target.id.split(\"-\")[1];\r\n    // console.log(font);\r\n    document.querySelector(\":root\").style.setProperty(\"--font\", font);\r\n  };\r\n\r\n  const deleteFont = () => {};\r\n\r\n  // {getComputedStyle(document.documentElement).getPropertyValue(\"--font\")}\r\n  //   console.log(fontsArray);\r\n\r\n  return (\r\n    <div className=\"sessionSettings\">\r\n      {fontsArray.map((font) => {\r\n        // console.log(font);\r\n        return (\r\n          <div key={font} className=\"settings_options font_settings\">\r\n            {font}\r\n            <div className=\"font_preview_container\">\r\n              <p className=\"font_preview\" style={{ fontFamily: font }}>\r\n                25:50\r\n              </p>\r\n              <div className=\"settings_button_container\">\r\n                <button\r\n                  id={`font-${font}`}\r\n                  className=\"settings_button\"\r\n                  onClick={useFont}\r\n                >\r\n                  Use\r\n                </button>\r\n                <button\r\n                  className=\"settings_button delete_button\"\r\n                  onClick={deleteFont}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <div className=\"input_container settings_options\">\r\n        <input\r\n          id=\"font_url_input\"\r\n          className=\"background_input\"\r\n          placeholder=\"Google Font's name (Robot, Lora etc.)\"\r\n        ></input>\r\n        <button className=\"settings_button\" onClick={addFont}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontSettings;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ToggleViewButton = (props) => {\r\n  const [view, setView] = useState(\"compact\");\r\n\r\n  const toggleView = () => {\r\n    if (view === \"compact\") {\r\n      document.getElementsByClassName(\"toggleViewButton\")[0].style.transform =\r\n        \"rotate(90deg) translateY(-0.3rem)\";\r\n      document.getElementsByClassName(\r\n        \"toggleViewButton\"\r\n      )[0].style.webkitTransform = \"rotate(90deg) translateY(-0.3rem)\";\r\n      document.getElementsByClassName(\"mainComponents\")[0].style.height =\r\n        \"100vh\";\r\n      setView(\"full\");\r\n    } else {\r\n      document.getElementsByClassName(\"toggleViewButton\")[0].style.transform =\r\n        \"rotate(270deg) translateY(-0.38rem)\";\r\n      document.getElementsByClassName(\r\n        \"toggleViewButton\"\r\n      )[0].style.webkitTransform = \"rotate(270deg) translateY(-0.38rem)\";\r\n      document.getElementsByClassName(\"mainComponents\")[0].style.height =\r\n        \"auto\";\r\n      setView(\"compact\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className=\"toggleViewButton\" onClick={toggleView}>\r\n      <p>&#8249;</p>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ToggleViewButton;\r\n","import React from \"react\";\r\n\r\nconst SessionPauseButton = ({ currentActivity, setCurrentActivity }) => {\r\n  const changeActivity = (e) => {\r\n    // console.log(e.target.id);\r\n    if (e.target.id === \"pause\") {\r\n      document\r\n        .getElementById(\"session\")\r\n        .classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"pause\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"pause\");\r\n    } else if (e.target.id === \"session\") {\r\n      document.getElementById(\"pause\").classList.remove(\"sessionControlActive\");\r\n      document.getElementById(\"session\").classList.add(\"sessionControlActive\");\r\n\r\n      setCurrentActivity(\"session\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sessionControlContainer\" onClick={changeActivity}>\r\n      <p\r\n        id=\"session\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"session\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        Session\r\n      </p>\r\n      <p\r\n        id=\"pause\"\r\n        className={`sessionControlButtons ${\r\n          currentActivity === \"pause\" ? \"sessionControlActive\" : \"\"\r\n        }`}\r\n      >\r\n        &nbsp;Pause&nbsp;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionPauseButton;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Plant from \"./Plant\";\r\n\r\nimport StartStopButton from \"./StartStopButton\";\r\nimport SessionSettings from \"./SessionSettings\";\r\nimport GIFSettings from \"./GIFSettings\";\r\nimport LookSettings from \"./LookSettings\";\r\nimport FontSettings from \"./FontSettings\";\r\n\r\nimport ToggleViewButton from \"./ToggleViewButton\";\r\n\r\nimport SessionPauseButton from \"./SessionPauseButton\";\r\n\r\nconst MainScreen = (props) => {\r\n  const [currentActivity, setCurrentActivity] = useState(\"session\");\r\n\r\n  const [pauseStartStep, setPauseStartStep] = useState(1);\r\n  const [sessionStartStep, setSessionStartStep] = useState(9);\r\n\r\n  const [numberOfSessions, setNumberOfSessions] = useState(2);\r\n  const [currentSession, setCurrentSession] = useState(1);\r\n  const [autoSwitch, setAutoSwitch] = useState(true);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"pauseGIFSArray\") === null ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === [] ||\r\n      localStorage.getItem(\"pauseGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"pauseGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (\r\n      localStorage.getItem(\"sessionGIFSArray\") === null ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === [] ||\r\n      localStorage.getItem(\"sessionGIFSArray\") === undefined\r\n    ) {\r\n      localStorage.setItem(\r\n        \"sessionGIFSArray\",\r\n        JSON.stringify([\r\n          \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n        ])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const [pauseGIFSArray, setPauseGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"pauseGIFSArray\")) || [\r\n      \"https://media0.giphy.com/media/XPdR7H122vZ1C/giphy.gif?cid=790b7611f6dfedca30056047728a8ae9027975ad8723943a&rid=giphy.gif&ct=g\",\r\n    ]\r\n  );\r\n  const [sessionGIFSArray, setSessionGIFSArray] = useState(\r\n    JSON.parse(localStorage.getItem(\"sessionGIFSArray\")) || [\r\n      \"https://i.pinimg.com/originals/ab/e1/72/abe17294582423e00db65c85aba185d8.gif\",\r\n    ]\r\n  );\r\n\r\n  const [currentSessionGIF, setCurrentSessionGIF] = useState(0);\r\n  const [currentPauseGIF, setCurrentPauseGIF] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function preventDefault(e) {\r\n      if (\r\n        e.target.className === \"radius\" ||\r\n        e.target.className === \"radiusCircle\"\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    document.body.addEventListener(\"touchmove\", preventDefault, {\r\n      passive: false,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainScreenContainer\">\r\n      <div className=\"mainComponents\">\r\n        <SessionPauseButton\r\n          currentActivity={currentActivity}\r\n          setCurrentActivity={setCurrentActivity}\r\n        />\r\n\r\n        {currentActivity === \"session\" ? (\r\n          <Plant\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            setCurrentActivity={setCurrentActivity}\r\n            startStep={sessionStartStep}\r\n            setStartStep={setSessionStartStep}\r\n            currentSession={currentSession}\r\n            setCurrentSession={setCurrentSession}\r\n            numberOfSessions={numberOfSessions}\r\n            GIFSArray={sessionGIFSArray}\r\n            currentGIF={currentSessionGIF}\r\n            autoSwitch={autoSwitch}\r\n            setAutoSwitch={setAutoSwitch}\r\n            timerActive={timerActive}\r\n            setTimerActive={setTimerActive}\r\n          />\r\n        ) : (\r\n          <Plant\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            setCurrentActivity={setCurrentActivity}\r\n            startStep={pauseStartStep}\r\n            setStartStep={setPauseStartStep}\r\n            currentSession={currentSession}\r\n            setCurrentSession={setCurrentSession}\r\n            numberOfSessions={numberOfSessions}\r\n            GIFSArray={pauseGIFSArray}\r\n            currentGIF={currentPauseGIF}\r\n            autoSwitch={autoSwitch}\r\n            setAutoSwitch={setAutoSwitch}\r\n            timerActive={timerActive}\r\n            setTimerActive={setTimerActive}\r\n          />\r\n        )}\r\n\r\n        <StartStopButton\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n          setAutoSwitch={setAutoSwitch}\r\n        />\r\n\r\n        <ToggleViewButton />\r\n      </div>\r\n      <div className=\"secondaryComponents\">\r\n        <SessionSettings\r\n          currentSession={currentSession}\r\n          setCurrentSession={setCurrentSession}\r\n          numberOfSessions={numberOfSessions}\r\n          setNumberOfSessions={setNumberOfSessions}\r\n          autoSwitch={autoSwitch}\r\n          setAutoSwitch={setAutoSwitch}\r\n          timerActive={timerActive}\r\n          setTimerActive={setTimerActive}\r\n        />\r\n        <LookSettings />\r\n        {currentActivity === \"session\" ? (\r\n          <GIFSettings\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            GIFSArray={sessionGIFSArray}\r\n            setGIFSArray={setSessionGIFSArray}\r\n            currentGIF={currentSessionGIF}\r\n            setCurrentGIF={setCurrentSessionGIF}\r\n          />\r\n        ) : (\r\n          <GIFSettings\r\n            key={currentActivity}\r\n            currentActivity={currentActivity}\r\n            GIFSArray={pauseGIFSArray}\r\n            setGIFSArray={setPauseGIFSArray}\r\n            currentGIF={currentPauseGIF}\r\n            setCurrentGIF={setCurrentPauseGIF}\r\n          />\r\n        )}\r\n        <FontSettings />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\n\r\n// import Header from \"./Components/HeaderContainer/Header\";\r\nimport MainScreen from \"./Components/MainScreenContainer/MainScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Header /> */}\r\n      <MainScreen />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n"],"sourceRoot":""}